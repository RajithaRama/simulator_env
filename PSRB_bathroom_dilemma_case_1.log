2023-01-17 07:45:45,287 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:45,287 - blackboard - Starting tests...
2023-01-17 07:45:45,291 - blackboard - Running Deontology test.
2023-01-17 07:45:45,291 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:45,291 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,292 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:45,292 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,292 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:45,292 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,292 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:45,292 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:45,294 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:45,294 - blackboard - Running Utilitarian test.
2023-01-17 07:45:45,294 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:45,294 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,297 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,297 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,314 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:45,314 - blackboard - Testing completed.
2023-01-17 07:45:45,318 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.999555  
(<bound method Robot.stay of <agent_types.robot...           0.999555  
(<bound method Robot.go_to_charge_station of <a...           0.999555  
2023-01-17 07:45:45,318 - blackboard - Calling the final evaluator.
2023-01-17 07:45:45,318 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:45,319 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,343 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(6, 0.598), (1, 1.0979999999999999), (12, 2.598)]
2023-01-17 07:45:45,348 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:45,349 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:45,349 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,376 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 0.598), (11, 2.598), (2, 3.198), (29, 3.198)]
2023-01-17 07:45:45,382 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:45,383 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:45,384 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,410 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 0.598), (3, 2.848), (9, 5.848)]
2023-01-17 07:45:45,416 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability'] intention
2023-01-17 07:45:45,417 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:45,417 - blackboard - Evaluation completed.
2023-01-17 07:45:45,420 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.999555  
(<bound method Robot.stay of <agent_types.robot...           0.999555  
(<bound method Robot.go_to_charge_station of <a...           0.999555  
2023-01-17 07:45:45,421 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:45,763 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:45,763 - blackboard - Starting tests...
2023-01-17 07:45:45,767 - blackboard - Running Deontology test.
2023-01-17 07:45:45,767 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:45,767 - elder_care_deontology_test - Testing action: <bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,767 - elder_care_deontology_test - Action (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:45,767 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,767 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [3]
2023-01-17 07:45:45,768 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,768 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [3]
2023-01-17 07:45:45,768 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,768 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [3, 4]
2023-01-17 07:45:45,768 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:45,769 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:45,769 - blackboard - Running Utilitarian test.
2023-01-17 07:45:45,769 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:45,770 - elder_care_utilitarian_test - Testing action: (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,773 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,776 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,776 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,792 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:45,792 - blackboard - Testing completed.
2023-01-17 07:45:45,794 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.move_away of <agent_types....                NaN   
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.move_away of <agent_types....            False   
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...             True   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.move_away of <agent_types....                []   
(<bound method Robot.follow of <agent_types.rob...               [3]   
(<bound method Robot.stay of <agent_types.robot...               [3]   
(<bound method Robot.go_to_charge_station of <a...            [3, 4]   

                                                   follower_autonomy  \
(<bound method Robot.move_away of <agent_types....               1.0   
(<bound method Robot.follow of <agent_types.rob...              -1.0   
(<bound method Robot.stay of <agent_types.robot...              -1.0   
(<bound method Robot.go_to_charge_station of <a...              -1.0   

                                                   follower_wellbeing  \
(<bound method Robot.move_away of <agent_types....                1.0   
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.move_away of <agent_types....           0.999108  
(<bound method Robot.follow of <agent_types.rob...           0.999108  
(<bound method Robot.stay of <agent_types.robot...           0.999108  
(<bound method Robot.go_to_charge_station of <a...           0.999108  
2023-01-17 07:45:45,795 - blackboard - Calling the final evaluator.
2023-01-17 07:45:45,795 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:45,795 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,810 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(10, 2.134537308870996), (28, 2.134537308870996), (31, 2.134537308870996), (34, 2.134537308870996)]
2023-01-17 07:45:45,815 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['autonomy'] intention
2023-01-17 07:45:45,815 - PSRB_eldercare_evaluator - Action move_away desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:45,815 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,834 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(12, 2.134537308870996), (30, 2.9678706422043293), (6, 3.134537308870996)]
2023-01-17 07:45:45,838 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:45:45,839 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [3] broken and not accepted by experts.
2023-01-17 07:45:45,839 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,862 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(11, 2.134537308870996), (29, 2.734537308870996), (5, 3.134537308870996)]
2023-01-17 07:45:45,866 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:45,867 - PSRB_eldercare_evaluator - Action stay desirability: 0| Reason: rules [3] broken and not accepted by experts.
2023-01-17 07:45:45,867 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,886 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 3.134537308870996), (3, 5.384537308870996), (43, 8.506240821922916)]
2023-01-17 07:45:45,890 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:45,891 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [3, 4] broken and not accepted by experts.
2023-01-17 07:45:45,891 - blackboard - Evaluation completed.
2023-01-17 07:45:45,893 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.move_away of <agent_types....                  1   
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  0   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.move_away of <agent_types....            False   
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...             True   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.move_away of <agent_types....                []   
(<bound method Robot.follow of <agent_types.rob...               [3]   
(<bound method Robot.stay of <agent_types.robot...               [3]   
(<bound method Robot.go_to_charge_station of <a...            [3, 4]   

                                                   follower_autonomy  \
(<bound method Robot.move_away of <agent_types....               1.0   
(<bound method Robot.follow of <agent_types.rob...              -1.0   
(<bound method Robot.stay of <agent_types.robot...              -1.0   
(<bound method Robot.go_to_charge_station of <a...              -1.0   

                                                   follower_wellbeing  \
(<bound method Robot.move_away of <agent_types....                1.0   
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.move_away of <agent_types....           0.999108  
(<bound method Robot.follow of <agent_types.rob...           0.999108  
(<bound method Robot.stay of <agent_types.robot...           0.999108  
(<bound method Robot.go_to_charge_station of <a...           0.999108  
2023-01-17 07:45:45,893 - blackboard - Recommended actions: [(<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)]
2023-01-17 07:45:46,234 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:46,234 - blackboard - Starting tests...
2023-01-17 07:45:46,238 - blackboard - Running Deontology test.
2023-01-17 07:45:46,238 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:46,238 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,238 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:46,238 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,238 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:46,238 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,239 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:46,239 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:46,240 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:46,240 - blackboard - Running Utilitarian test.
2023-01-17 07:45:46,240 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:46,240 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,242 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,242 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,256 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:46,256 - blackboard - Testing completed.
2023-01-17 07:45:46,259 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99866  
(<bound method Robot.stay of <agent_types.robot...            0.99866  
(<bound method Robot.go_to_charge_station of <a...            0.99866  
2023-01-17 07:45:46,259 - blackboard - Calling the final evaluator.
2023-01-17 07:45:46,259 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:46,259 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,276 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(6, 1.1325373088709958), (1, 1.965870642204329), (12, 3.1325373088709956)]
2023-01-17 07:45:46,280 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:46,281 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:46,281 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,302 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.1325373088709958), (11, 3.1325373088709956), (2, 3.732537308870996), (29, 3.732537308870996)]
2023-01-17 07:45:46,307 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:46,308 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:46,308 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,328 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.1325373088709958), (3, 3.3825373088709956), (43, 6.504240821922915)]
2023-01-17 07:45:46,332 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:46,333 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:46,333 - blackboard - Evaluation completed.
2023-01-17 07:45:46,335 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99866  
(<bound method Robot.stay of <agent_types.robot...            0.99866  
(<bound method Robot.go_to_charge_station of <a...            0.99866  
2023-01-17 07:45:46,336 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:46,677 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:46,677 - blackboard - Starting tests...
2023-01-17 07:45:46,681 - blackboard - Running Deontology test.
2023-01-17 07:45:46,681 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:46,681 - elder_care_deontology_test - Testing action: <bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,682 - elder_care_deontology_test - Action (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:46,682 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,682 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [3]
2023-01-17 07:45:46,682 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,682 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [3]
2023-01-17 07:45:46,682 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,682 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [3, 4]
2023-01-17 07:45:46,682 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:46,683 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:46,683 - blackboard - Running Utilitarian test.
2023-01-17 07:45:46,683 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:46,684 - elder_care_utilitarian_test - Testing action: (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,686 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,688 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,688 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,704 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:46,704 - blackboard - Testing completed.
2023-01-17 07:45:46,708 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.move_away of <agent_types....                NaN   
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.move_away of <agent_types....            False   
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...             True   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.move_away of <agent_types....                []   
(<bound method Robot.follow of <agent_types.rob...               [3]   
(<bound method Robot.stay of <agent_types.robot...               [3]   
(<bound method Robot.go_to_charge_station of <a...            [3, 4]   

                                                   follower_autonomy  \
(<bound method Robot.move_away of <agent_types....               1.0   
(<bound method Robot.follow of <agent_types.rob...              -1.0   
(<bound method Robot.stay of <agent_types.robot...              -1.0   
(<bound method Robot.go_to_charge_station of <a...              -1.0   

                                                   follower_wellbeing  \
(<bound method Robot.move_away of <agent_types....                1.0   
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.move_away of <agent_types....           0.998209  
(<bound method Robot.follow of <agent_types.rob...           0.998209  
(<bound method Robot.stay of <agent_types.robot...           0.998209  
(<bound method Robot.go_to_charge_station of <a...           0.998209  
2023-01-17 07:45:46,708 - blackboard - Calling the final evaluator.
2023-01-17 07:45:46,708 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:46,708 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,727 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(10, 2.130537308870996), (28, 2.130537308870996), (31, 2.130537308870996), (34, 2.130537308870996)]
2023-01-17 07:45:46,732 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['autonomy'] intention
2023-01-17 07:45:46,733 - PSRB_eldercare_evaluator - Action move_away desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:46,733 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,754 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(12, 2.130537308870996), (30, 2.963870642204329), (6, 3.130537308870996)]
2023-01-17 07:45:46,758 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:45:46,759 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [3] broken and not accepted by experts.
2023-01-17 07:45:46,759 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,781 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(11, 2.130537308870996), (29, 2.730537308870996), (5, 3.130537308870996)]
2023-01-17 07:45:46,786 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:46,786 - PSRB_eldercare_evaluator - Action stay desirability: 0| Reason: rules [3] broken and not accepted by experts.
2023-01-17 07:45:46,786 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,804 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 3.130537308870996), (3, 5.380537308870996), (43, 8.502240821922914)]
2023-01-17 07:45:46,808 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:46,809 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [3, 4] broken and not accepted by experts.
2023-01-17 07:45:46,809 - blackboard - Evaluation completed.
2023-01-17 07:45:46,811 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.move_away of <agent_types....                  1   
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  0   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.move_away of <agent_types....            False   
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...             True   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.move_away of <agent_types....                []   
(<bound method Robot.follow of <agent_types.rob...               [3]   
(<bound method Robot.stay of <agent_types.robot...               [3]   
(<bound method Robot.go_to_charge_station of <a...            [3, 4]   

                                                   follower_autonomy  \
(<bound method Robot.move_away of <agent_types....               1.0   
(<bound method Robot.follow of <agent_types.rob...              -1.0   
(<bound method Robot.stay of <agent_types.robot...              -1.0   
(<bound method Robot.go_to_charge_station of <a...              -1.0   

                                                   follower_wellbeing  \
(<bound method Robot.move_away of <agent_types....                1.0   
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.move_away of <agent_types....           0.998209  
(<bound method Robot.follow of <agent_types.rob...           0.998209  
(<bound method Robot.stay of <agent_types.robot...           0.998209  
(<bound method Robot.go_to_charge_station of <a...           0.998209  
2023-01-17 07:45:46,812 - blackboard - Recommended actions: [(<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)]
2023-01-17 07:45:47,153 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:47,153 - blackboard - Starting tests...
2023-01-17 07:45:47,157 - blackboard - Running Deontology test.
2023-01-17 07:45:47,157 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:47,157 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,157 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:47,157 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,158 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:47,158 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,158 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:47,158 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:47,159 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:47,159 - blackboard - Running Utilitarian test.
2023-01-17 07:45:47,159 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:47,160 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:47,161 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,161 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,173 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:47,173 - blackboard - Testing completed.
2023-01-17 07:45:47,175 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.997758  
(<bound method Robot.stay of <agent_types.robot...           0.997758  
(<bound method Robot.go_to_charge_station of <a...           0.997758  
2023-01-17 07:45:47,175 - blackboard - Calling the final evaluator.
2023-01-17 07:45:47,175 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:47,175 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:47,191 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(6, 1.1285373088709958), (1, 1.961870642204329), (12, 3.128537308870996)]
2023-01-17 07:45:47,196 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:47,197 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:47,197 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,219 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.1285373088709958), (11, 3.128537308870996), (2, 3.7285373088709957), (29, 3.7285373088709957)]
2023-01-17 07:45:47,224 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:47,225 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:47,225 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,243 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.1285373088709958), (3, 3.378537308870996), (43, 6.500240821922914)]
2023-01-17 07:45:47,247 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:47,247 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:47,247 - blackboard - Evaluation completed.
2023-01-17 07:45:47,250 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.997758  
(<bound method Robot.stay of <agent_types.robot...           0.997758  
(<bound method Robot.go_to_charge_station of <a...           0.997758  
2023-01-17 07:45:47,250 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:47,590 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:47,591 - blackboard - Starting tests...
2023-01-17 07:45:47,594 - blackboard - Running Deontology test.
2023-01-17 07:45:47,594 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:47,594 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,595 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:47,595 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,595 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:47,595 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,595 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:47,595 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:47,597 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:47,597 - blackboard - Running Utilitarian test.
2023-01-17 07:45:47,597 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:47,597 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:47,600 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,600 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,616 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:47,616 - blackboard - Testing completed.
2023-01-17 07:45:47,618 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.205631   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.997305  
(<bound method Robot.stay of <agent_types.robot...           0.997305  
(<bound method Robot.go_to_charge_station of <a...           0.997305  
2023-01-17 07:45:47,619 - blackboard - Calling the final evaluator.
2023-01-17 07:45:47,619 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:47,619 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:47,638 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(6, 1.1265373088709958), (1, 1.959870642204329), (12, 3.126537308870996)]
2023-01-17 07:45:47,642 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:47,642 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:47,642 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,665 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.9209063301488782), (2, 2.9321682875931137), (11, 3.9209063301488785)]
2023-01-17 07:45:47,669 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:47,669 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:47,669 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,691 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.1265373088709958), (3, 3.376537308870996), (43, 6.498240821922915)]
2023-01-17 07:45:47,695 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:47,696 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:47,696 - blackboard - Evaluation completed.
2023-01-17 07:45:47,698 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.205631   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.997305  
(<bound method Robot.stay of <agent_types.robot...           0.997305  
(<bound method Robot.go_to_charge_station of <a...           0.997305  
2023-01-17 07:45:47,698 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:48,045 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:48,046 - blackboard - Starting tests...
2023-01-17 07:45:48,049 - blackboard - Running Deontology test.
2023-01-17 07:45:48,049 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:48,049 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,049 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:48,049 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,049 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:48,049 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,050 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:48,050 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:48,051 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:48,051 - blackboard - Running Utilitarian test.
2023-01-17 07:45:48,051 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:48,051 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,055 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,055 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,070 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:48,070 - blackboard - Testing completed.
2023-01-17 07:45:48,072 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99685  
(<bound method Robot.stay of <agent_types.robot...            0.99685  
(<bound method Robot.go_to_charge_station of <a...            0.99685  
2023-01-17 07:45:48,072 - blackboard - Calling the final evaluator.
2023-01-17 07:45:48,072 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:48,072 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,091 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(6, 1.457870642204329), (1, 1.6245373088709956), (12, 3.457870642204329)]
2023-01-17 07:45:48,095 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:48,096 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:48,096 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,117 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.1245373088709956), (11, 3.1245373088709956), (2, 3.7245373088709957), (29, 3.7245373088709957)]
2023-01-17 07:45:48,123 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:48,123 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:48,123 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,142 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.1267088753799324), (3, 3.3723657423620588), (43, 6.494069255413977)]
2023-01-17 07:45:48,146 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:48,147 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:48,147 - blackboard - Evaluation completed.
2023-01-17 07:45:48,149 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99685  
(<bound method Robot.stay of <agent_types.robot...            0.99685  
(<bound method Robot.go_to_charge_station of <a...            0.99685  
2023-01-17 07:45:48,150 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:48,491 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:48,491 - blackboard - Starting tests...
2023-01-17 07:45:48,494 - blackboard - Running Deontology test.
2023-01-17 07:45:48,494 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:48,495 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,495 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:48,495 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,495 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:48,495 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,495 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:48,495 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:48,497 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:48,497 - blackboard - Running Utilitarian test.
2023-01-17 07:45:48,497 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:48,497 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,500 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,501 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,514 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:48,514 - blackboard - Testing completed.
2023-01-17 07:45:48,516 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.996393  
(<bound method Robot.stay of <agent_types.robot...           0.996393  
(<bound method Robot.go_to_charge_station of <a...           0.996393  
2023-01-17 07:45:48,516 - blackboard - Calling the final evaluator.
2023-01-17 07:45:48,517 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:48,517 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,534 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(1, 1.1225373088709958), (6, 1.9558706422043288), (30, 3.122537308870996)]
2023-01-17 07:45:48,539 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:48,539 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:48,539 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,563 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.7225373088709959), (2, 3.122537308870996), (29, 3.122537308870996)]
2023-01-17 07:45:48,567 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:48,568 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:48,568 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,587 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.3747088753799326), (3, 3.120365742362059), (43, 6.242069255413977)]
2023-01-17 07:45:48,592 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:48,592 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:48,593 - blackboard - Evaluation completed.
2023-01-17 07:45:48,595 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.996393  
(<bound method Robot.stay of <agent_types.robot...           0.996393  
(<bound method Robot.go_to_charge_station of <a...           0.996393  
2023-01-17 07:45:48,596 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:48,937 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:48,937 - blackboard - Starting tests...
2023-01-17 07:45:48,941 - blackboard - Running Deontology test.
2023-01-17 07:45:48,941 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:48,941 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,941 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:48,941 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,941 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:48,941 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,941 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:48,942 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:48,943 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:48,943 - blackboard - Running Utilitarian test.
2023-01-17 07:45:48,943 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:48,943 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,946 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,947 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,963 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:48,963 - blackboard - Testing completed.
2023-01-17 07:45:48,965 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995935  
(<bound method Robot.stay of <agent_types.robot...           0.995935  
(<bound method Robot.go_to_charge_station of <a...           0.995935  
2023-01-17 07:45:48,965 - blackboard - Calling the final evaluator.
2023-01-17 07:45:48,966 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:48,966 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,982 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(1, 1.1205373088709956), (6, 1.953870642204329), (30, 3.1205373088709956)]
2023-01-17 07:45:48,986 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:48,987 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:48,987 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,011 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.7205373088709957), (2, 3.1205373088709956), (29, 3.1205373088709956)]
2023-01-17 07:45:49,015 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:49,016 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:49,016 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,035 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.3727088753799324), (3, 3.1183657423620588), (43, 6.240069255413977)]
2023-01-17 07:45:49,039 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:49,040 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:49,040 - blackboard - Evaluation completed.
2023-01-17 07:45:49,042 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995935  
(<bound method Robot.stay of <agent_types.robot...           0.995935  
(<bound method Robot.go_to_charge_station of <a...           0.995935  
2023-01-17 07:45:49,043 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:49,384 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:49,384 - blackboard - Starting tests...
2023-01-17 07:45:49,387 - blackboard - Running Deontology test.
2023-01-17 07:45:49,388 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:49,388 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,388 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:49,388 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,388 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:49,388 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,388 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:49,388 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:49,390 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:49,390 - blackboard - Running Utilitarian test.
2023-01-17 07:45:49,390 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:49,390 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:49,393 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,394 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,408 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:49,409 - blackboard - Testing completed.
2023-01-17 07:45:49,411 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995475  
(<bound method Robot.stay of <agent_types.robot...           0.995475  
(<bound method Robot.go_to_charge_station of <a...           0.995475  
2023-01-17 07:45:49,411 - blackboard - Calling the final evaluator.
2023-01-17 07:45:49,411 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:49,411 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:49,427 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(1, 1.1185373088709958), (6, 1.9518706422043288), (30, 3.118537308870996)]
2023-01-17 07:45:49,431 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:49,432 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:49,432 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,454 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.7185373088709959), (2, 3.118537308870996), (29, 3.118537308870996)]
2023-01-17 07:45:49,458 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:49,459 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:49,459 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,481 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.3685373088709958), (3, 3.118537308870996), (43, 6.240240821922915)]
2023-01-17 07:45:49,486 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:49,486 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:49,486 - blackboard - Evaluation completed.
2023-01-17 07:45:49,488 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995475  
(<bound method Robot.stay of <agent_types.robot...           0.995475  
(<bound method Robot.go_to_charge_station of <a...           0.995475  
2023-01-17 07:45:49,489 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:49,829 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:49,829 - blackboard - Starting tests...
2023-01-17 07:45:49,833 - blackboard - Running Deontology test.
2023-01-17 07:45:49,833 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:49,833 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,833 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:49,833 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,833 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:49,833 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,833 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:49,834 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:49,835 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:49,835 - blackboard - Running Utilitarian test.
2023-01-17 07:45:49,835 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:49,835 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:49,839 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,839 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,856 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:49,856 - blackboard - Testing completed.
2023-01-17 07:45:49,859 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995014  
(<bound method Robot.stay of <agent_types.robot...           0.995014  
(<bound method Robot.go_to_charge_station of <a...           0.995014  
2023-01-17 07:45:49,860 - blackboard - Calling the final evaluator.
2023-01-17 07:45:49,860 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:49,860 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:49,882 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(1, 2.1165373088709956), (6, 2.9498706422043295), (36, 3.1165373088709956)]
2023-01-17 07:45:49,887 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:49,887 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:49,888 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,914 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 2.383203975537662), (35, 3.1165373088709956), (2, 3.7832039755376625), (29, 3.7832039755376625)]
2023-01-17 07:45:49,919 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:49,920 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:49,920 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,940 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.3665373088709956), (3, 3.1165373088709956), (43, 6.238240821922914)]
2023-01-17 07:45:49,944 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:49,945 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:49,945 - blackboard - Evaluation completed.
2023-01-17 07:45:49,948 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995014  
(<bound method Robot.stay of <agent_types.robot...           0.995014  
(<bound method Robot.go_to_charge_station of <a...           0.995014  
2023-01-17 07:45:49,948 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:50,292 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:50,292 - blackboard - Starting tests...
2023-01-17 07:45:50,295 - blackboard - Running Deontology test.
2023-01-17 07:45:50,295 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:50,295 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,295 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:45:50,295 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,295 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:50,296 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,296 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:50,296 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:50,297 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:50,297 - blackboard - Running Utilitarian test.
2023-01-17 07:45:50,297 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:50,297 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:50,300 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,300 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,315 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:50,316 - blackboard - Testing completed.
2023-01-17 07:45:50,318 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99455  
(<bound method Robot.stay of <agent_types.robot...            0.99455  
(<bound method Robot.go_to_charge_station of <a...            0.99455  
2023-01-17 07:45:50,318 - blackboard - Calling the final evaluator.
2023-01-17 07:45:50,318 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:50,318 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:50,334 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 2.114537308870996), (33, 4.914537308870996), (36, 5.081203975537663)]
2023-01-17 07:45:50,338 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:45:50,339 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:45:50,339 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,361 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 2.114537308870996), (42, 3.795764631446723), (14, 4.306713480902903)]
2023-01-17 07:45:50,365 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy'] intention
2023-01-17 07:45:50,366 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:50,366 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,384 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(43, 3.9862408219229137), (9, 4.114537308870996), (15, 4.497189671379093)]
2023-01-17 07:45:50,388 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:50,389 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:50,389 - blackboard - Evaluation completed.
2023-01-17 07:45:50,391 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99455  
(<bound method Robot.stay of <agent_types.robot...            0.99455  
(<bound method Robot.go_to_charge_station of <a...            0.99455  
2023-01-17 07:45:50,391 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:50,732 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:50,733 - blackboard - Starting tests...
2023-01-17 07:45:50,739 - blackboard - Running Deontology test.
2023-01-17 07:45:50,739 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:50,739 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,740 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:45:50,740 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,740 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:50,740 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,740 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:50,741 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:50,742 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:50,743 - blackboard - Running Utilitarian test.
2023-01-17 07:45:50,743 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:50,743 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:50,748 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,749 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,769 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:50,769 - blackboard - Testing completed.
2023-01-17 07:45:50,772 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.407084   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.994086  
(<bound method Robot.stay of <agent_types.robot...           0.994086  
(<bound method Robot.go_to_charge_station of <a...           0.994086  
2023-01-17 07:45:50,772 - blackboard - Calling the final evaluator.
2023-01-17 07:45:50,772 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:50,773 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:50,791 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.1125373088709956), (33, 4.912537308870996), (36, 5.079203975537662)]
2023-01-17 07:45:50,795 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:45:50,796 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:45:50,796 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,818 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 1.7054536575237222), (14, 2.95762982955563), (42, 3.24668098009945)]
2023-01-17 07:45:50,822 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy'] intention
2023-01-17 07:45:50,823 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:50,823 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,845 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.519620960218269), (15, 3.1481060200318205), (43, 3.4371571705756407)]
2023-01-17 07:45:50,849 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:50,850 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:50,850 - blackboard - Evaluation completed.
2023-01-17 07:45:50,853 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.407084   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.994086  
(<bound method Robot.stay of <agent_types.robot...           0.994086  
(<bound method Robot.go_to_charge_station of <a...           0.994086  
2023-01-17 07:45:50,853 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:51,197 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:51,197 - blackboard - Starting tests...
2023-01-17 07:45:51,200 - blackboard - Running Deontology test.
2023-01-17 07:45:51,200 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:51,200 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,200 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,200 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:51,201 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,201 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,201 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:51,201 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,201 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,201 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:51,201 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:51,202 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:51,202 - blackboard - Running Utilitarian test.
2023-01-17 07:45:51,202 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:51,202 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,206 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,206 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,222 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:51,222 - blackboard - Testing completed.
2023-01-17 07:45:51,224 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.407084   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.993619  
(<bound method Robot.stay of <agent_types.robot...           0.993619  
(<bound method Robot.go_to_charge_station of <a...           0.993619  
2023-01-17 07:45:51,225 - blackboard - Calling the final evaluator.
2023-01-17 07:45:51,225 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:51,225 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,241 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 1.7374753856648077), (41, 1.8565265362086278), (16, 2.126526536208628)]
2023-01-17 07:45:51,245 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:51,245 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:51,246 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,266 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.8603917343175345), (42, 2.1494428848613545), (17, 2.273610187555901)]
2023-01-17 07:45:51,270 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:51,270 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:51,270 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,289 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.8603917343175345), (43, 2.1494428848613545), (18, 2.273610187555901)]
2023-01-17 07:45:51,293 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:51,294 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:51,294 - blackboard - Evaluation completed.
2023-01-17 07:45:51,296 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.407084   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.993619  
(<bound method Robot.stay of <agent_types.robot...           0.993619  
(<bound method Robot.go_to_charge_station of <a...           0.993619  
2023-01-17 07:45:51,296 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:51,637 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:51,637 - blackboard - Starting tests...
2023-01-17 07:45:51,640 - blackboard - Running Deontology test.
2023-01-17 07:45:51,641 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:51,641 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,641 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,641 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:51,641 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,641 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,641 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:51,641 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,641 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,641 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:51,641 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:51,642 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:51,643 - blackboard - Running Utilitarian test.
2023-01-17 07:45:51,643 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:51,643 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,646 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,646 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,663 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:51,664 - blackboard - Testing completed.
2023-01-17 07:45:51,666 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.394578   
(<bound method Robot.go_to_charge_station of <a...           0.394578   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.993151  
(<bound method Robot.stay of <agent_types.robot...           0.993151  
(<bound method Robot.go_to_charge_station of <a...           0.993151  
2023-01-17 07:45:51,666 - blackboard - Calling the final evaluator.
2023-01-17 07:45:51,666 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:51,666 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,682 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 1.4385857093892422), (41, 1.5576368599330621), (16, 1.8276368599330621)]
2023-01-17 07:45:51,686 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:51,687 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:51,687 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,707 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.5740081103671038), (42, 1.8630592609109238), (17, 1.9622144589552006)]
2023-01-17 07:45:51,711 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:51,712 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:51,712 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,729 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.5740081103671038), (43, 1.8630592609109238), (18, 1.9622144589552006)]
2023-01-17 07:45:51,733 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:51,733 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:51,733 - blackboard - Evaluation completed.
2023-01-17 07:45:51,735 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.394578   
(<bound method Robot.go_to_charge_station of <a...           0.394578   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.993151  
(<bound method Robot.stay of <agent_types.robot...           0.993151  
(<bound method Robot.go_to_charge_station of <a...           0.993151  
2023-01-17 07:45:51,736 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:52,075 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:52,075 - blackboard - Starting tests...
2023-01-17 07:45:52,079 - blackboard - Running Deontology test.
2023-01-17 07:45:52,079 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:52,079 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,080 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,080 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:52,080 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,080 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,080 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:52,080 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,080 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,080 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:52,081 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:52,082 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:52,082 - blackboard - Running Utilitarian test.
2023-01-17 07:45:52,082 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:52,082 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,086 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,086 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,105 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:52,105 - blackboard - Testing completed.
2023-01-17 07:45:52,108 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.381924   
(<bound method Robot.go_to_charge_station of <a...           0.381924   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.992681  
(<bound method Robot.stay of <agent_types.robot...           0.992681  
(<bound method Robot.go_to_charge_station of <a...           0.992681  
2023-01-17 07:45:52,108 - blackboard - Calling the final evaluator.
2023-01-17 07:45:52,108 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:52,108 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,127 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 1.2336616852451412), (41, 1.352712835788961), (16, 1.622712835788961)]
2023-01-17 07:45:52,132 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:52,133 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:52,133 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,156 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.3817380521637592), (42, 1.6707892027075792), (17, 1.744636468870343)]
2023-01-17 07:45:52,160 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:52,161 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:52,161 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,178 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.3817380521637592), (43, 1.6707892027075792), (18, 1.744636468870343)]
2023-01-17 07:45:52,181 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:52,182 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:52,182 - blackboard - Evaluation completed.
2023-01-17 07:45:52,184 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.381924   
(<bound method Robot.go_to_charge_station of <a...           0.381924   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.992681  
(<bound method Robot.stay of <agent_types.robot...           0.992681  
(<bound method Robot.go_to_charge_station of <a...           0.992681  
2023-01-17 07:45:52,185 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:52,524 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:52,524 - blackboard - Starting tests...
2023-01-17 07:45:52,529 - blackboard - Running Deontology test.
2023-01-17 07:45:52,529 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:52,529 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,529 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,529 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:52,530 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,530 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,530 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:52,530 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,530 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,530 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:52,530 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:52,531 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:52,531 - blackboard - Running Utilitarian test.
2023-01-17 07:45:52,532 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:52,532 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,535 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,535 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,554 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:52,554 - blackboard - Testing completed.
2023-01-17 07:45:52,556 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.369125   
(<bound method Robot.go_to_charge_station of <a...           0.369125   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.992209  
(<bound method Robot.stay of <agent_types.robot...           0.992209  
(<bound method Robot.go_to_charge_station of <a...           0.992209  
2023-01-17 07:45:52,557 - blackboard - Calling the final evaluator.
2023-01-17 07:45:52,557 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:52,557 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,573 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 1.0785330413943557), (41, 1.197584191938176), (16, 1.467584191938176)]
2023-01-17 07:45:52,577 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:52,578 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:52,578 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,598 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.2394082101876334), (42, 1.5284593607314536), (17, 1.5767090231448984)]
2023-01-17 07:45:52,602 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:52,602 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:52,603 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,620 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.2394082101876334), (43, 1.5284593607314536), (18, 1.5767090231448984)]
2023-01-17 07:45:52,624 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:52,624 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:52,624 - blackboard - Evaluation completed.
2023-01-17 07:45:52,626 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.369125   
(<bound method Robot.go_to_charge_station of <a...           0.369125   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.992209  
(<bound method Robot.stay of <agent_types.robot...           0.992209  
(<bound method Robot.go_to_charge_station of <a...           0.992209  
2023-01-17 07:45:52,627 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:52,966 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:52,966 - blackboard - Starting tests...
2023-01-17 07:45:52,969 - blackboard - Running Deontology test.
2023-01-17 07:45:52,970 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:52,970 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,970 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,970 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:52,970 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,970 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,971 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:52,971 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,971 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,971 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:52,971 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:52,972 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:52,972 - blackboard - Running Utilitarian test.
2023-01-17 07:45:52,972 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:52,972 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,976 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,976 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,995 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:52,995 - blackboard - Testing completed.
2023-01-17 07:45:52,998 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.356184   
(<bound method Robot.go_to_charge_station of <a...           0.356184   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.991736  
(<bound method Robot.stay of <agent_types.robot...           0.991736  
(<bound method Robot.go_to_charge_station of <a...           0.991736  
2023-01-17 07:45:52,998 - blackboard - Calling the final evaluator.
2023-01-17 07:45:52,998 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:52,998 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,015 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.9541199070408143), (41, 1.0731710575846345), (16, 1.3431710575846343)]
2023-01-17 07:45:53,019 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,020 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:53,020 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,042 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.1279354350590256), (42, 1.4169865856028456), (17, 1.439355529566423)]
2023-01-17 07:45:53,046 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,047 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:53,047 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,069 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.1279354350590256), (43, 1.4169865856028456), (18, 1.439355529566423)]
2023-01-17 07:45:53,074 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:53,074 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:53,075 - blackboard - Evaluation completed.
2023-01-17 07:45:53,077 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.356184   
(<bound method Robot.go_to_charge_station of <a...           0.356184   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.991736  
(<bound method Robot.stay of <agent_types.robot...           0.991736  
(<bound method Robot.go_to_charge_station of <a...           0.991736  
2023-01-17 07:45:53,079 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:53,417 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:53,417 - blackboard - Starting tests...
2023-01-17 07:45:53,422 - blackboard - Running Deontology test.
2023-01-17 07:45:53,422 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:53,422 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,422 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,422 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:53,422 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,423 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,423 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:53,423 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,423 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,423 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:53,423 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:53,424 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:53,424 - blackboard - Running Utilitarian test.
2023-01-17 07:45:53,424 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:53,425 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,428 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,428 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,445 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:53,445 - blackboard - Testing completed.
2023-01-17 07:45:53,447 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.343106   
(<bound method Robot.go_to_charge_station of <a...           0.343106   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...            0.99126  
(<bound method Robot.stay of <agent_types.robot...            0.99126  
(<bound method Robot.go_to_charge_station of <a...            0.99126  
2023-01-17 07:45:53,447 - blackboard - Calling the final evaluator.
2023-01-17 07:45:53,447 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:53,447 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,464 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.8504791981792343), (41, 0.9695303487230545), (16, 1.2395303487230545)]
2023-01-17 07:45:53,468 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,469 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:53,469 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,492 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.0373731642129096), (17, 1.3226363826893792), (42, 1.3264243147567298)]
2023-01-17 07:45:53,496 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,496 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:53,496 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,513 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.0373731642129096), (18, 1.3226363826893792), (43, 1.3264243147567298)]
2023-01-17 07:45:53,517 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:53,518 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:53,518 - blackboard - Evaluation completed.
2023-01-17 07:45:53,520 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.343106   
(<bound method Robot.go_to_charge_station of <a...           0.343106   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...            0.99126  
(<bound method Robot.stay of <agent_types.robot...            0.99126  
(<bound method Robot.go_to_charge_station of <a...            0.99126  
2023-01-17 07:45:53,520 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:53,860 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:53,860 - blackboard - Starting tests...
2023-01-17 07:45:53,863 - blackboard - Running Deontology test.
2023-01-17 07:45:53,864 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:53,864 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,864 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,864 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:53,864 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,864 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,864 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:53,864 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,864 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,865 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:53,865 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:53,866 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:53,866 - blackboard - Running Utilitarian test.
2023-01-17 07:45:53,866 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:53,866 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,870 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,870 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,887 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:53,887 - blackboard - Testing completed.
2023-01-17 07:45:53,889 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.329893   
(<bound method Robot.go_to_charge_station of <a...           0.329893   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.990783  
(<bound method Robot.stay of <agent_types.robot...           0.990783  
(<bound method Robot.go_to_charge_station of <a...           0.990783  
2023-01-17 07:45:53,889 - blackboard - Calling the final evaluator.
2023-01-17 07:45:53,889 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:53,889 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,904 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.7617871662245075), (41, 0.8808383167683276), (16, 1.1508383167683276)]
2023-01-17 07:45:53,908 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,908 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:53,908 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,928 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 0.9618939719929136), (17, 1.2207315109999215), (42, 1.2509451225367336)]
2023-01-17 07:45:53,933 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,934 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:53,934 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,951 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 0.9618939719929136), (18, 1.2207315109999215), (43, 1.2509451225367336)]
2023-01-17 07:45:53,956 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:53,956 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:53,956 - blackboard - Evaluation completed.
2023-01-17 07:45:53,959 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.329893   
(<bound method Robot.go_to_charge_station of <a...           0.329893   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.990783  
(<bound method Robot.stay of <agent_types.robot...           0.990783  
(<bound method Robot.go_to_charge_station of <a...           0.990783  
2023-01-17 07:45:53,959 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:54,298 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:54,298 - blackboard - Starting tests...
2023-01-17 07:45:54,301 - blackboard - Running Deontology test.
2023-01-17 07:45:54,302 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:54,302 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,302 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,302 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:54,302 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,302 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,302 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:54,302 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,303 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,303 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:54,303 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:54,304 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:54,304 - blackboard - Running Utilitarian test.
2023-01-17 07:45:54,304 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:54,304 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,308 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,308 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,327 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:54,327 - blackboard - Testing completed.
2023-01-17 07:45:54,330 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...            0.31655   
(<bound method Robot.go_to_charge_station of <a...            0.31655   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.990305  
(<bound method Robot.stay of <agent_types.robot...           0.990305  
(<bound method Robot.go_to_charge_station of <a...           0.990305  
2023-01-17 07:45:54,331 - blackboard - Calling the final evaluator.
2023-01-17 07:45:54,331 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:54,331 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,349 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.684346989495038), (41, 0.8033981400388581), (16, 1.073398140038858)]
2023-01-17 07:45:54,356 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:54,357 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:54,357 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,386 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 0.8977971631493642), (17, 1.1299479663845318), (42, 1.1868483136931842)]
2023-01-17 07:45:54,390 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:54,390 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:54,391 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,408 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 0.8977971631493642), (18, 1.1299479663845318), (43, 1.1868483136931842)]
2023-01-17 07:45:54,411 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:54,412 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:54,412 - blackboard - Evaluation completed.
2023-01-17 07:45:54,414 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...            0.31655   
(<bound method Robot.go_to_charge_station of <a...            0.31655   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.990305  
(<bound method Robot.stay of <agent_types.robot...           0.990305  
(<bound method Robot.go_to_charge_station of <a...           0.990305  
2023-01-17 07:45:54,415 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:54,756 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:54,756 - blackboard - Starting tests...
2023-01-17 07:45:54,760 - blackboard - Running Deontology test.
2023-01-17 07:45:54,760 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:54,760 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,760 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,761 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:54,761 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,761 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,761 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:54,761 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,761 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,761 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:54,761 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:54,762 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:54,762 - blackboard - Running Utilitarian test.
2023-01-17 07:45:54,762 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:54,762 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,766 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,766 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,783 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:54,783 - blackboard - Testing completed.
2023-01-17 07:45:54,785 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...            0.30308   
(<bound method Robot.go_to_charge_station of <a...            0.30308   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.989824  
(<bound method Robot.stay of <agent_types.robot...           0.989824  
(<bound method Robot.go_to_charge_station of <a...           0.989824  
2023-01-17 07:45:54,785 - blackboard - Calling the final evaluator.
2023-01-17 07:45:54,785 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:54,785 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,800 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.6156692611832436), (41, 0.7347204117270637), (16, 1.0047204117270636)]
2023-01-17 07:45:54,804 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:54,805 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:54,805 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,828 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 0.842589263383667), (17, 1.0478004095266402), (42, 1.131640413927487)]
2023-01-17 07:45:54,833 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:54,834 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:54,834 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,856 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 0.842589263383667), (18, 1.0478004095266402), (43, 1.131640413927487)]
2023-01-17 07:45:54,860 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:54,861 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:54,861 - blackboard - Evaluation completed.
2023-01-17 07:45:54,864 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...            0.30308   
(<bound method Robot.go_to_charge_station of <a...            0.30308   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.989824  
(<bound method Robot.stay of <agent_types.robot...           0.989824  
(<bound method Robot.go_to_charge_station of <a...           0.989824  
2023-01-17 07:45:54,864 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:55,207 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:55,207 - blackboard - Starting tests...
2023-01-17 07:45:55,210 - blackboard - Running Deontology test.
2023-01-17 07:45:55,210 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:55,210 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,211 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,211 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:55,211 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,211 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,211 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:55,211 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,211 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,211 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:55,211 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:55,213 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:55,213 - blackboard - Running Utilitarian test.
2023-01-17 07:45:55,213 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:55,213 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,217 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,217 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,235 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:55,235 - blackboard - Testing completed.
2023-01-17 07:45:55,238 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.289488   
(<bound method Robot.go_to_charge_station of <a...           0.289488   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.989342  
(<bound method Robot.stay of <agent_types.robot...           0.989342  
(<bound method Robot.go_to_charge_station of <a...           0.989342  
2023-01-17 07:45:55,238 - blackboard - Calling the final evaluator.
2023-01-17 07:45:55,238 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:55,238 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,254 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.5539999999999993), (41, 0.6730511505438194), (16, 0.9430511505438193)]
2023-01-17 07:45:55,258 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:55,258 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:55,258 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,279 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 0.7945120331324315), (17, 0.9725391174113871), (42, 1.0835631836762514)]
2023-01-17 07:45:55,283 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:55,284 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:55,284 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,304 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 0.7945120331324315), (18, 0.9725391174113871), (43, 1.0835631836762514)]
2023-01-17 07:45:55,309 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:55,309 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:55,309 - blackboard - Evaluation completed.
2023-01-17 07:45:55,312 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.289488   
(<bound method Robot.go_to_charge_station of <a...           0.289488   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.989342  
(<bound method Robot.stay of <agent_types.robot...           0.989342  
(<bound method Robot.go_to_charge_station of <a...           0.989342  
2023-01-17 07:45:55,312 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:55,652 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:55,652 - blackboard - Starting tests...
2023-01-17 07:45:55,656 - blackboard - Running Deontology test.
2023-01-17 07:45:55,656 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:55,656 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,656 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,656 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:55,657 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,657 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,657 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:55,657 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,657 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,657 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:55,657 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:55,658 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:55,659 - blackboard - Running Utilitarian test.
2023-01-17 07:45:55,659 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:55,659 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,662 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,663 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,681 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:55,681 - blackboard - Testing completed.
2023-01-17 07:45:55,683 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.275778   
(<bound method Robot.go_to_charge_station of <a...           0.275778   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.988858  
(<bound method Robot.stay of <agent_types.robot...           0.988858  
(<bound method Robot.go_to_charge_station of <a...           0.988858  
2023-01-17 07:45:55,683 - blackboard - Calling the final evaluator.
2023-01-17 07:45:55,683 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:55,683 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,698 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.6059417378197415), (41, 0.6171094127240772), (16, 0.8871094127240771)]
2023-01-17 07:45:55,702 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:55,703 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:55,703 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,723 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 0.8601635589221447), (17, 0.9028875916216739), (42, 1.0413312338264804)]
2023-01-17 07:45:55,728 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:55,729 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:55,729 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,746 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 0.8601635589221447), (18, 0.9028875916216739), (43, 1.0413312338264804)]
2023-01-17 07:45:55,750 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:55,750 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:55,750 - blackboard - Evaluation completed.
2023-01-17 07:45:55,752 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.275778   
(<bound method Robot.go_to_charge_station of <a...           0.275778   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.988858  
(<bound method Robot.stay of <agent_types.robot...           0.988858  
(<bound method Robot.go_to_charge_station of <a...           0.988858  
2023-01-17 07:45:55,753 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:56,091 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:56,091 - blackboard - Starting tests...
2023-01-17 07:45:56,095 - blackboard - Running Deontology test.
2023-01-17 07:45:56,095 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:56,095 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,095 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,095 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:56,095 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,095 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,095 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:56,095 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,095 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,096 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:56,096 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:56,098 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:56,098 - blackboard - Running Utilitarian test.
2023-01-17 07:45:56,098 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:56,098 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,101 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,101 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,118 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:56,118 - blackboard - Testing completed.
2023-01-17 07:45:56,120 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.261955   
(<bound method Robot.go_to_charge_station of <a...           0.261955   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.988372  
(<bound method Robot.stay of <agent_types.robot...           0.988372  
(<bound method Robot.go_to_charge_station of <a...           0.988372  
2023-01-17 07:45:56,121 - blackboard - Calling the final evaluator.
2023-01-17 07:45:56,121 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:56,121 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,135 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.5659320575842075), (13, 0.6531190929596111), (16, 0.8359320575842074)]
2023-01-17 07:45:56,139 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:56,140 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:56,140 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,159 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.8378873196146187), (14, 0.9211638309291998), (42, 1.0039767955537962)]
2023-01-17 07:45:56,163 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:56,164 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:56,164 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,183 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.8378873196146187), (15, 0.9211638309291998), (43, 1.0039767955537962)]
2023-01-17 07:45:56,187 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:56,188 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:56,188 - blackboard - Evaluation completed.
2023-01-17 07:45:56,190 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.261955   
(<bound method Robot.go_to_charge_station of <a...           0.261955   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.988372  
(<bound method Robot.stay of <agent_types.robot...           0.988372  
(<bound method Robot.go_to_charge_station of <a...           0.988372  
2023-01-17 07:45:56,191 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:56,533 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:56,533 - blackboard - Starting tests...
2023-01-17 07:45:56,537 - blackboard - Running Deontology test.
2023-01-17 07:45:56,537 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:56,537 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,537 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,537 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:56,537 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,537 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,537 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:56,537 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,538 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,538 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:56,538 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:56,539 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:56,540 - blackboard - Running Utilitarian test.
2023-01-17 07:45:56,540 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:56,540 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,543 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,543 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,562 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:56,562 - blackboard - Testing completed.
2023-01-17 07:45:56,564 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.248024   
(<bound method Robot.go_to_charge_station of <a...           0.248024   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.987884  
(<bound method Robot.stay of <agent_types.robot...           0.987884  
(<bound method Robot.go_to_charge_station of <a...           0.987884  
2023-01-17 07:45:56,565 - blackboard - Calling the final evaluator.
2023-01-17 07:45:56,565 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:56,565 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,582 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.5187771947466717), (13, 0.6962739557971469), (16, 0.7887771947466716)]
2023-01-17 07:45:56,585 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:56,586 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:56,586 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,616 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.8007531723979696), (42, 0.9707531723979697), (14, 0.9782499334484449)]
2023-01-17 07:45:56,620 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:56,621 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:56,621 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,643 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.8007531723979696), (43, 0.9707531723979697), (15, 0.9782499334484449)]
2023-01-17 07:45:56,647 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:56,647 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:56,647 - blackboard - Evaluation completed.
2023-01-17 07:45:56,649 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.248024   
(<bound method Robot.go_to_charge_station of <a...           0.248024   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.987884  
(<bound method Robot.stay of <agent_types.robot...           0.987884  
(<bound method Robot.go_to_charge_station of <a...           0.987884  
2023-01-17 07:45:56,650 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:56,990 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:56,990 - blackboard - Starting tests...
2023-01-17 07:45:56,993 - blackboard - Running Deontology test.
2023-01-17 07:45:56,994 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:56,994 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,994 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,994 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:56,994 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,994 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,994 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:56,995 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,995 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,995 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:56,995 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:56,996 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:56,996 - blackboard - Running Utilitarian test.
2023-01-17 07:45:56,997 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:56,997 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,000 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,000 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,017 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:57,018 - blackboard - Testing completed.
2023-01-17 07:45:57,021 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.233989   
(<bound method Robot.go_to_charge_station of <a...           0.233989   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.987395  
(<bound method Robot.stay of <agent_types.robot...           0.987395  
(<bound method Robot.go_to_charge_station of <a...           0.987395  
2023-01-17 07:45:57,021 - blackboard - Calling the final evaluator.
2023-01-17 07:45:57,021 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:57,021 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,036 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.4750616064983748), (13, 0.7359895440454438), (16, 0.7450616064983747)]
2023-01-17 07:45:57,040 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:57,041 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:57,041 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,061 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.7710721680379157), (42, 0.9410721680379157), (14, 1.0320001055849848)]
2023-01-17 07:45:57,065 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:57,066 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:57,066 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,083 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.7710721680379157), (43, 0.9410721680379157), (15, 1.0320001055849848)]
2023-01-17 07:45:57,087 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:57,088 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:57,088 - blackboard - Evaluation completed.
2023-01-17 07:45:57,090 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.233989   
(<bound method Robot.go_to_charge_station of <a...           0.233989   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.987395  
(<bound method Robot.stay of <agent_types.robot...           0.987395  
(<bound method Robot.go_to_charge_station of <a...           0.987395  
2023-01-17 07:45:57,091 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:57,430 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:57,430 - blackboard - Starting tests...
2023-01-17 07:45:57,434 - blackboard - Running Deontology test.
2023-01-17 07:45:57,434 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:57,434 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,434 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,435 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:57,435 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,435 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,435 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:57,435 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,435 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,435 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:57,435 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:57,437 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:57,437 - blackboard - Running Utilitarian test.
2023-01-17 07:45:57,437 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:57,438 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,441 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,441 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,459 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:57,460 - blackboard - Testing completed.
2023-01-17 07:45:57,463 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.219857   
(<bound method Robot.go_to_charge_station of <a...           0.219857   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.986904  
(<bound method Robot.stay of <agent_types.robot...           0.986904  
(<bound method Robot.go_to_charge_station of <a...           0.986904  
2023-01-17 07:45:57,463 - blackboard - Calling the final evaluator.
2023-01-17 07:45:57,463 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:57,463 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,484 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.43431876675209113), (16, 0.704318766752091), (13, 0.7727323837917273)]
2023-01-17 07:45:57,489 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:57,490 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:57,490 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,515 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.7444621112284616), (42, 0.9144621112284617), (14, 1.0828757282680979)]
2023-01-17 07:45:57,519 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:57,520 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:57,520 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,543 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.7444621112284616), (43, 0.9144621112284617), (15, 1.0828757282680979)]
2023-01-17 07:45:57,547 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:57,548 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:57,549 - blackboard - Evaluation completed.
2023-01-17 07:45:57,551 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.219857   
(<bound method Robot.go_to_charge_station of <a...           0.219857   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.986904  
(<bound method Robot.stay of <agent_types.robot...           0.986904  
(<bound method Robot.go_to_charge_station of <a...           0.986904  
2023-01-17 07:45:57,552 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:57,892 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:57,892 - blackboard - Starting tests...
2023-01-17 07:45:57,895 - blackboard - Running Deontology test.
2023-01-17 07:45:57,896 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:57,896 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,896 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,896 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:57,896 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,896 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,896 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:57,896 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,896 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,897 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:57,897 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:57,898 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:57,898 - blackboard - Running Utilitarian test.
2023-01-17 07:45:57,898 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:57,898 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,901 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,902 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,920 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:57,920 - blackboard - Testing completed.
2023-01-17 07:45:57,923 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.205631   
(<bound method Robot.go_to_charge_station of <a...           0.205631   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...            0.98641  
(<bound method Robot.stay of <agent_types.robot...            0.98641  
(<bound method Robot.go_to_charge_station of <a...            0.98641  
2023-01-17 07:45:57,924 - blackboard - Calling the final evaluator.
2023-01-17 07:45:57,924 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:57,924 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,949 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.3961698389678756), (16, 0.6661698389678755), (13, 0.8068813115759428)]
2023-01-17 07:45:57,954 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:57,955 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:57,955 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,985 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.720538860245758), (42, 0.890538860245758), (20, 1.1233877572934197)]
2023-01-17 07:45:57,990 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:45:57,991 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:57,991 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:58,012 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.720538860245758), (43, 0.890538860245758), (21, 1.1233877572934197)]
2023-01-17 07:45:58,017 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:45:58,018 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:58,018 - blackboard - Evaluation completed.
2023-01-17 07:45:58,020 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.205631   
(<bound method Robot.go_to_charge_station of <a...           0.205631   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...            0.98641  
(<bound method Robot.stay of <agent_types.robot...            0.98641  
(<bound method Robot.go_to_charge_station of <a...            0.98641  
2023-01-17 07:45:58,021 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:01,222 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:01,223 - blackboard - Starting tests...
2023-01-17 07:47:01,228 - blackboard - Running Deontology test.
2023-01-17 07:47:01,228 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:01,228 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,228 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,229 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:47:01,229 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,229 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,230 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:01,230 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,230 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,230 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:01,230 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:01,231 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:01,232 - blackboard - Running Utilitarian test.
2023-01-17 07:47:01,232 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:01,232 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,235 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,235 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,257 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:01,258 - blackboard - Testing completed.
2023-01-17 07:47:01,262 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.191318   
(<bound method Robot.go_to_charge_station of <a...           0.191318   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.985915  
(<bound method Robot.stay of <agent_types.robot...           0.985915  
(<bound method Robot.go_to_charge_station of <a...           0.985915  
2023-01-17 07:47:01,262 - blackboard - Calling the final evaluator.
2023-01-17 07:47:01,262 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:01,262 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,288 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.36030312759327876), (16, 0.6303031275932787), (13, 0.8387480229505396)]
2023-01-17 07:47:01,293 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:47:01,293 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:47:01,294 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,319 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.6989852613871539), (42, 0.8689852613871539), (20, 1.0732079334028302)]
2023-01-17 07:47:01,325 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:01,326 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:01,326 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,357 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.6989852613871539), (43, 0.8689852613871539), (21, 1.0732079334028302)]
2023-01-17 07:47:01,362 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:01,363 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:01,363 - blackboard - Evaluation completed.
2023-01-17 07:47:01,366 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.191318   
(<bound method Robot.go_to_charge_station of <a...           0.191318   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.985915  
(<bound method Robot.stay of <agent_types.robot...           0.985915  
(<bound method Robot.go_to_charge_station of <a...           0.985915  
2023-01-17 07:47:01,367 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:01,709 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:01,709 - blackboard - Starting tests...
2023-01-17 07:47:01,712 - blackboard - Running Deontology test.
2023-01-17 07:47:01,712 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:01,712 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,713 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,713 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:47:01,713 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,713 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,713 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:01,713 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,713 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,713 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:01,713 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:01,715 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:01,715 - blackboard - Running Utilitarian test.
2023-01-17 07:47:01,715 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:01,716 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,719 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,719 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,738 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:01,738 - blackboard - Testing completed.
2023-01-17 07:47:01,740 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.176923   
(<bound method Robot.go_to_charge_station of <a...           0.176923   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.985419  
(<bound method Robot.stay of <agent_types.robot...           0.985419  
(<bound method Robot.go_to_charge_station of <a...           0.985419  
2023-01-17 07:47:01,740 - blackboard - Calling the final evaluator.
2023-01-17 07:47:01,740 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:01,741 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,757 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.3264591950436718), (16, 0.5964591950436717), (19, 0.8180461346470984)]
2023-01-17 07:47:01,762 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing'] intention
2023-01-17 07:47:01,762 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 1| Reason: rules [2]broken, but accepted by experts. Since it increases ['wellbeing']values greatly, deemed accepted by PSRB system.
2023-01-17 07:47:01,762 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,782 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.6795362735308783), (42, 0.8495362735308783), (20, 1.0249690561598919)]
2023-01-17 07:47:01,786 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:01,787 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:01,787 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,804 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.6795362735308783), (43, 0.8495362735308783), (21, 1.0249690561598919)]
2023-01-17 07:47:01,808 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:01,808 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:01,808 - blackboard - Evaluation completed.
2023-01-17 07:47:01,810 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.176923   
(<bound method Robot.go_to_charge_station of <a...           0.176923   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.985419  
(<bound method Robot.stay of <agent_types.robot...           0.985419  
(<bound method Robot.go_to_charge_station of <a...           0.985419  
2023-01-17 07:47:01,811 - blackboard - Recommended actions: [(<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:02,155 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:02,155 - blackboard - Starting tests...
2023-01-17 07:47:02,158 - blackboard - Running Deontology test.
2023-01-17 07:47:02,159 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:02,159 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,159 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:02,159 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,159 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:02,159 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,159 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:02,159 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:02,161 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:02,161 - blackboard - Running Utilitarian test.
2023-01-17 07:47:02,161 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:02,161 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:02,164 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,165 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,178 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:02,178 - blackboard - Testing completed.
2023-01-17 07:47:02,180 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.162452   
(<bound method Robot.go_to_charge_station of <a...           0.162452   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.98492  
(<bound method Robot.stay of <agent_types.robot...            0.98492  
(<bound method Robot.go_to_charge_station of <a...            0.98492  
2023-01-17 07:47:02,180 - blackboard - Calling the final evaluator.
2023-01-17 07:47:02,181 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:02,181 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:02,200 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 3.1006439734356146), (33, 5.9006439734356135), (36, 7.0673106401022805)]
2023-01-17 07:47:02,204 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:02,205 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:02,205 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,231 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 4.057206081396057), (42, 4.227206081396057), (26, 4.273696791971576)]
2023-01-17 07:47:02,235 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:02,236 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:02,236 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,256 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 1.947682271872247), (43, 2.1176822718722472), (21, 2.264172982447766)]
2023-01-17 07:47:02,260 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:02,261 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:02,261 - blackboard - Evaluation completed.
2023-01-17 07:47:02,263 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.162452   
(<bound method Robot.go_to_charge_station of <a...           0.162452   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.98492  
(<bound method Robot.stay of <agent_types.robot...            0.98492  
(<bound method Robot.go_to_charge_station of <a...            0.98492  
2023-01-17 07:47:02,264 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:02,606 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:02,606 - blackboard - Starting tests...
2023-01-17 07:47:02,609 - blackboard - Running Deontology test.
2023-01-17 07:47:02,610 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:02,610 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,610 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:02,610 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,610 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:02,610 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,610 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:02,610 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:02,612 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:02,612 - blackboard - Running Utilitarian test.
2023-01-17 07:47:02,612 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:02,612 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:02,616 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,616 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,630 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:02,630 - blackboard - Testing completed.
2023-01-17 07:47:02,633 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.984419  
(<bound method Robot.stay of <agent_types.robot...           0.984419  
(<bound method Robot.go_to_charge_station of <a...           0.984419  
2023-01-17 07:47:02,633 - blackboard - Calling the final evaluator.
2023-01-17 07:47:02,633 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:02,633 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:02,652 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.572537308870995), (33, 4.372537308870995), (36, 5.539203975537661)]
2023-01-17 07:47:02,656 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:02,657 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:02,657 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,680 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.372537308870995), (32, 4.372537308870995), (42, 5.053764631446723)]
2023-01-17 07:47:02,684 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:02,685 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:02,685 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,706 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.479620960218268), (15, 3.1081060200318196), (43, 3.39715717057564)]
2023-01-17 07:47:02,710 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:02,711 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:02,711 - blackboard - Evaluation completed.
2023-01-17 07:47:02,714 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.984419  
(<bound method Robot.stay of <agent_types.robot...           0.984419  
(<bound method Robot.go_to_charge_station of <a...           0.984419  
2023-01-17 07:47:02,715 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:03,055 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:03,055 - blackboard - Starting tests...
2023-01-17 07:47:03,058 - blackboard - Running Deontology test.
2023-01-17 07:47:03,058 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:03,059 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,059 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:03,059 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,059 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:03,059 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,059 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:03,059 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:03,061 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:03,061 - blackboard - Running Utilitarian test.
2023-01-17 07:47:03,061 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:03,061 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,064 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,064 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,077 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:03,077 - blackboard - Testing completed.
2023-01-17 07:47:03,079 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.983917  
(<bound method Robot.stay of <agent_types.robot...           0.983917  
(<bound method Robot.go_to_charge_station of <a...           0.983917  
2023-01-17 07:47:03,080 - blackboard - Calling the final evaluator.
2023-01-17 07:47:03,080 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:03,080 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,096 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5705373088709949), (33, 4.370537308870995), (36, 5.537203975537661)]
2023-01-17 07:47:03,100 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:03,101 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:03,101 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,124 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.370537308870995), (32, 4.370537308870995), (42, 5.051764631446723)]
2023-01-17 07:47:03,128 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:03,129 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:03,129 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,147 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.4776209602182684), (15, 3.10610602003182), (43, 3.39515717057564)]
2023-01-17 07:47:03,151 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:03,152 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:03,152 - blackboard - Evaluation completed.
2023-01-17 07:47:03,155 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.983917  
(<bound method Robot.stay of <agent_types.robot...           0.983917  
(<bound method Robot.go_to_charge_station of <a...           0.983917  
2023-01-17 07:47:03,155 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:03,495 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:03,495 - blackboard - Starting tests...
2023-01-17 07:47:03,498 - blackboard - Running Deontology test.
2023-01-17 07:47:03,499 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:03,499 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,499 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:03,499 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,499 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:03,499 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,499 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:03,499 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:03,500 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:03,501 - blackboard - Running Utilitarian test.
2023-01-17 07:47:03,501 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:03,501 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,504 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,504 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,517 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:03,517 - blackboard - Testing completed.
2023-01-17 07:47:03,519 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.983412  
(<bound method Robot.stay of <agent_types.robot...           0.983412  
(<bound method Robot.go_to_charge_station of <a...           0.983412  
2023-01-17 07:47:03,520 - blackboard - Calling the final evaluator.
2023-01-17 07:47:03,520 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:03,520 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,537 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.568537308870995), (33, 4.368537308870995), (36, 5.535203975537661)]
2023-01-17 07:47:03,541 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:03,541 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:03,541 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,563 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.3685373088709953), (32, 4.368537308870995), (42, 5.049764631446723)]
2023-01-17 07:47:03,567 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:03,568 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:03,568 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,595 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.4756209602182686), (15, 3.1041060200318196), (43, 3.39315717057564)]
2023-01-17 07:47:03,600 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:03,601 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:03,601 - blackboard - Evaluation completed.
2023-01-17 07:47:03,604 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.983412  
(<bound method Robot.stay of <agent_types.robot...           0.983412  
(<bound method Robot.go_to_charge_station of <a...           0.983412  
2023-01-17 07:47:03,604 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:03,945 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:03,945 - blackboard - Starting tests...
2023-01-17 07:47:03,948 - blackboard - Running Deontology test.
2023-01-17 07:47:03,948 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:03,949 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,949 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:03,949 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,949 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:03,949 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,949 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:03,949 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:03,951 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:03,951 - blackboard - Running Utilitarian test.
2023-01-17 07:47:03,951 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:03,951 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,954 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,954 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,967 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:03,967 - blackboard - Testing completed.
2023-01-17 07:47:03,969 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.982906  
(<bound method Robot.stay of <agent_types.robot...           0.982906  
(<bound method Robot.go_to_charge_station of <a...           0.982906  
2023-01-17 07:47:03,969 - blackboard - Calling the final evaluator.
2023-01-17 07:47:03,969 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:03,969 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,987 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5665373088709948), (33, 4.366537308870995), (36, 5.533203975537661)]
2023-01-17 07:47:03,991 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:03,992 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:03,992 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,017 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.3665373088709947), (32, 4.366537308870995), (42, 5.047764631446723)]
2023-01-17 07:47:04,021 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:04,022 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:04,022 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,040 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.473620960218268), (15, 3.1021060200318193), (43, 3.3911571705756396)]
2023-01-17 07:47:04,044 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:04,045 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:04,045 - blackboard - Evaluation completed.
2023-01-17 07:47:04,047 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.982906  
(<bound method Robot.stay of <agent_types.robot...           0.982906  
(<bound method Robot.go_to_charge_station of <a...           0.982906  
2023-01-17 07:47:04,048 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:04,391 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:04,391 - blackboard - Starting tests...
2023-01-17 07:47:04,395 - blackboard - Running Deontology test.
2023-01-17 07:47:04,395 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:04,396 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,396 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:04,396 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,396 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:04,396 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,396 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:04,396 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:04,397 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:04,397 - blackboard - Running Utilitarian test.
2023-01-17 07:47:04,397 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:04,397 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:04,401 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,402 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,417 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:04,417 - blackboard - Testing completed.
2023-01-17 07:47:04,420 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.982398  
(<bound method Robot.stay of <agent_types.robot...           0.982398  
(<bound method Robot.go_to_charge_station of <a...           0.982398  
2023-01-17 07:47:04,420 - blackboard - Calling the final evaluator.
2023-01-17 07:47:04,420 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:04,420 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:04,439 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5645373088709948), (33, 4.364537308870995), (36, 5.531203975537661)]
2023-01-17 07:47:04,444 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:04,445 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:04,445 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,470 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.364537308870995), (32, 4.364537308870995), (42, 5.045764631446723)]
2023-01-17 07:47:04,473 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:04,474 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:04,474 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,493 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.471620960218268), (15, 3.1001060200318196), (43, 3.38915717057564)]
2023-01-17 07:47:04,497 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:04,497 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:04,497 - blackboard - Evaluation completed.
2023-01-17 07:47:04,499 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.982398  
(<bound method Robot.stay of <agent_types.robot...           0.982398  
(<bound method Robot.go_to_charge_station of <a...           0.982398  
2023-01-17 07:47:04,500 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:04,839 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:04,839 - blackboard - Starting tests...
2023-01-17 07:47:04,843 - blackboard - Running Deontology test.
2023-01-17 07:47:04,843 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:04,843 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,843 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:04,843 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,844 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:04,844 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,844 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:04,844 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:04,845 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:04,845 - blackboard - Running Utilitarian test.
2023-01-17 07:47:04,845 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:04,845 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:04,848 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,848 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,861 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:04,861 - blackboard - Testing completed.
2023-01-17 07:47:04,864 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.981888  
(<bound method Robot.stay of <agent_types.robot...           0.981888  
(<bound method Robot.go_to_charge_station of <a...           0.981888  
2023-01-17 07:47:04,864 - blackboard - Calling the final evaluator.
2023-01-17 07:47:04,864 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:04,864 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:04,883 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5625373088709948), (33, 4.362537308870995), (36, 5.529203975537661)]
2023-01-17 07:47:04,887 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:04,888 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:04,888 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,910 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.362537308870995), (32, 4.362537308870995), (42, 5.043764631446723)]
2023-01-17 07:47:04,913 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:04,914 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:04,914 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,932 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.4696209602182684), (15, 3.09810602003182), (43, 3.38715717057564)]
2023-01-17 07:47:04,936 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:04,937 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:04,937 - blackboard - Evaluation completed.
2023-01-17 07:47:04,939 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.981888  
(<bound method Robot.stay of <agent_types.robot...           0.981888  
(<bound method Robot.go_to_charge_station of <a...           0.981888  
2023-01-17 07:47:04,939 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:05,280 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:05,280 - blackboard - Starting tests...
2023-01-17 07:47:05,283 - blackboard - Running Deontology test.
2023-01-17 07:47:05,283 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:05,284 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,284 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:05,284 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,284 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:05,284 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,284 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:05,284 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:05,286 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:05,286 - blackboard - Running Utilitarian test.
2023-01-17 07:47:05,286 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:05,286 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:05,289 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,289 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,302 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:05,302 - blackboard - Testing completed.
2023-01-17 07:47:05,304 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.981375  
(<bound method Robot.stay of <agent_types.robot...           0.981375  
(<bound method Robot.go_to_charge_station of <a...           0.981375  
2023-01-17 07:47:05,304 - blackboard - Calling the final evaluator.
2023-01-17 07:47:05,305 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:05,305 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:05,321 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5605373088709948), (33, 4.360537308870994), (36, 5.5272039755376605)]
2023-01-17 07:47:05,325 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:05,325 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:05,325 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,346 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.360537308870995), (32, 4.360537308870994), (42, 5.041764631446723)]
2023-01-17 07:47:05,350 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:05,351 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:05,351 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,370 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.467620960218268), (15, 3.0961060200318196), (43, 3.38515717057564)]
2023-01-17 07:47:05,373 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:05,374 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:05,374 - blackboard - Evaluation completed.
2023-01-17 07:47:05,376 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.981375  
(<bound method Robot.stay of <agent_types.robot...           0.981375  
(<bound method Robot.go_to_charge_station of <a...           0.981375  
2023-01-17 07:47:05,377 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:05,717 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:05,717 - blackboard - Starting tests...
2023-01-17 07:47:05,721 - blackboard - Running Deontology test.
2023-01-17 07:47:05,721 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:05,721 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,722 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:05,722 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,722 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:05,722 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,722 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:05,722 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:05,724 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:05,724 - blackboard - Running Utilitarian test.
2023-01-17 07:47:05,724 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:05,724 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:05,728 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,728 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,743 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:05,743 - blackboard - Testing completed.
2023-01-17 07:47:05,746 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.980861  
(<bound method Robot.stay of <agent_types.robot...           0.980861  
(<bound method Robot.go_to_charge_station of <a...           0.980861  
2023-01-17 07:47:05,746 - blackboard - Calling the final evaluator.
2023-01-17 07:47:05,746 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:05,746 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:05,762 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5585373088709948), (33, 4.358537308870995), (36, 5.525203975537661)]
2023-01-17 07:47:05,766 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:05,767 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:05,767 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,789 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.3585373088709947), (32, 4.358537308870995), (42, 5.039764631446722)]
2023-01-17 07:47:05,794 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:05,794 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:05,794 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,814 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.465620960218268), (15, 3.0941060200318193), (43, 3.3831571705756396)]
2023-01-17 07:47:05,819 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:05,820 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:05,820 - blackboard - Evaluation completed.
2023-01-17 07:47:05,822 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.980861  
(<bound method Robot.stay of <agent_types.robot...           0.980861  
(<bound method Robot.go_to_charge_station of <a...           0.980861  
2023-01-17 07:47:05,823 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:06,162 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:06,163 - blackboard - Starting tests...
2023-01-17 07:47:06,167 - blackboard - Running Deontology test.
2023-01-17 07:47:06,167 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:06,167 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,167 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:06,167 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,168 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:06,168 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,168 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:06,168 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:06,170 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:06,170 - blackboard - Running Utilitarian test.
2023-01-17 07:47:06,170 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:06,170 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:06,173 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,173 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,187 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:06,187 - blackboard - Testing completed.
2023-01-17 07:47:06,190 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.980345  
(<bound method Robot.stay of <agent_types.robot...           0.980345  
(<bound method Robot.go_to_charge_station of <a...           0.980345  
2023-01-17 07:47:06,191 - blackboard - Calling the final evaluator.
2023-01-17 07:47:06,191 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:06,191 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:06,209 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5565373088709946), (33, 4.356537308870995), (36, 5.523203975537661)]
2023-01-17 07:47:06,213 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:06,213 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:06,213 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,240 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.356537308870995), (32, 4.356537308870995), (42, 5.037764631446723)]
2023-01-17 07:47:06,244 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:06,245 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:06,245 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,266 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.463620960218268), (15, 3.0921060200318196), (43, 3.38115717057564)]
2023-01-17 07:47:06,270 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:06,270 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:06,270 - blackboard - Evaluation completed.
2023-01-17 07:47:06,279 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.980345  
(<bound method Robot.stay of <agent_types.robot...           0.980345  
(<bound method Robot.go_to_charge_station of <a...           0.980345  
2023-01-17 07:47:06,280 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:06,620 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:06,620 - blackboard - Starting tests...
2023-01-17 07:47:06,624 - blackboard - Running Deontology test.
2023-01-17 07:47:06,624 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:06,625 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,625 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:06,625 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,625 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:06,625 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,625 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:06,625 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:06,626 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:06,626 - blackboard - Running Utilitarian test.
2023-01-17 07:47:06,626 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:06,627 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:06,630 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,630 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,644 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:06,645 - blackboard - Testing completed.
2023-01-17 07:47:06,647 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.979827  
(<bound method Robot.stay of <agent_types.robot...           0.979827  
(<bound method Robot.go_to_charge_station of <a...           0.979827  
2023-01-17 07:47:06,647 - blackboard - Calling the final evaluator.
2023-01-17 07:47:06,647 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:06,647 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:06,667 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5545373088709948), (33, 4.354537308870994), (36, 5.521203975537661)]
2023-01-17 07:47:06,672 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:06,672 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:06,673 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,697 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.354537308870995), (32, 4.354537308870994), (42, 5.035764631446723)]
2023-01-17 07:47:06,701 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:06,702 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:06,702 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,723 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.4616209602182684), (15, 3.0901060200318193), (43, 3.3791571705756396)]
2023-01-17 07:47:06,727 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:06,728 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:06,728 - blackboard - Evaluation completed.
2023-01-17 07:47:06,730 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.979827  
(<bound method Robot.stay of <agent_types.robot...           0.979827  
(<bound method Robot.go_to_charge_station of <a...           0.979827  
2023-01-17 07:47:06,730 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           2023-01-17 07:45:45,287 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:45,287 - blackboard - Starting tests...
2023-01-17 07:45:45,291 - blackboard - Running Deontology test.
2023-01-17 07:45:45,291 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:45,291 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,292 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:45,292 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,292 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:45,292 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,292 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:45,292 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:45,294 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:45,294 - blackboard - Running Utilitarian test.
2023-01-17 07:45:45,294 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:45,294 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,297 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,297 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,314 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:45,314 - blackboard - Testing completed.
2023-01-17 07:45:45,318 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.999555  
(<bound method Robot.stay of <agent_types.robot...           0.999555  
(<bound method Robot.go_to_charge_station of <a...           0.999555  
2023-01-17 07:45:45,318 - blackboard - Calling the final evaluator.
2023-01-17 07:45:45,318 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:45,319 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,343 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(6, 0.598), (1, 1.0979999999999999), (12, 2.598)]
2023-01-17 07:45:45,348 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:45,349 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:45,349 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,376 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 0.598), (11, 2.598), (2, 3.198), (29, 3.198)]
2023-01-17 07:45:45,382 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:45,383 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:45,384 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,410 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 0.598), (3, 2.848), (9, 5.848)]
2023-01-17 07:45:45,416 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability'] intention
2023-01-17 07:45:45,417 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:45,417 - blackboard - Evaluation completed.
2023-01-17 07:45:45,420 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.999555  
(<bound method Robot.stay of <agent_types.robot...           0.999555  
(<bound method Robot.go_to_charge_station of <a...           0.999555  
2023-01-17 07:45:45,421 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:45,763 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:45,763 - blackboard - Starting tests...
2023-01-17 07:45:45,767 - blackboard - Running Deontology test.
2023-01-17 07:45:45,767 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:45,767 - elder_care_deontology_test - Testing action: <bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,767 - elder_care_deontology_test - Action (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:45,767 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,767 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [3]
2023-01-17 07:45:45,768 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,768 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [3]
2023-01-17 07:45:45,768 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:45,768 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [3, 4]
2023-01-17 07:45:45,768 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:45,769 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:45,769 - blackboard - Running Utilitarian test.
2023-01-17 07:45:45,769 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:45,770 - elder_care_utilitarian_test - Testing action: (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,773 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,776 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,776 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,792 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:45,792 - blackboard - Testing completed.
2023-01-17 07:45:45,794 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.move_away of <agent_types....                NaN   
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.move_away of <agent_types....            False   
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...             True   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.move_away of <agent_types....                []   
(<bound method Robot.follow of <agent_types.rob...               [3]   
(<bound method Robot.stay of <agent_types.robot...               [3]   
(<bound method Robot.go_to_charge_station of <a...            [3, 4]   

                                                   follower_autonomy  \
(<bound method Robot.move_away of <agent_types....               1.0   
(<bound method Robot.follow of <agent_types.rob...              -1.0   
(<bound method Robot.stay of <agent_types.robot...              -1.0   
(<bound method Robot.go_to_charge_station of <a...              -1.0   

                                                   follower_wellbeing  \
(<bound method Robot.move_away of <agent_types....                1.0   
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.move_away of <agent_types....           0.999108  
(<bound method Robot.follow of <agent_types.rob...           0.999108  
(<bound method Robot.stay of <agent_types.robot...           0.999108  
(<bound method Robot.go_to_charge_station of <a...           0.999108  
2023-01-17 07:45:45,795 - blackboard - Calling the final evaluator.
2023-01-17 07:45:45,795 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:45,795 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,810 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(10, 2.134537308870996), (28, 2.134537308870996), (31, 2.134537308870996), (34, 2.134537308870996)]
2023-01-17 07:45:45,815 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['autonomy'] intention
2023-01-17 07:45:45,815 - PSRB_eldercare_evaluator - Action move_away desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:45,815 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:45,834 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(12, 2.134537308870996), (30, 2.9678706422043293), (6, 3.134537308870996)]
2023-01-17 07:45:45,838 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:45:45,839 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [3] broken and not accepted by experts.
2023-01-17 07:45:45,839 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,862 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(11, 2.134537308870996), (29, 2.734537308870996), (5, 3.134537308870996)]
2023-01-17 07:45:45,866 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:45,867 - PSRB_eldercare_evaluator - Action stay desirability: 0| Reason: rules [3] broken and not accepted by experts.
2023-01-17 07:45:45,867 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:45,886 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 3.134537308870996), (3, 5.384537308870996), (43, 8.506240821922916)]
2023-01-17 07:45:45,890 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:45,891 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [3, 4] broken and not accepted by experts.
2023-01-17 07:45:45,891 - blackboard - Evaluation completed.
2023-01-17 07:45:45,893 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.move_away of <agent_types....                  1   
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  0   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.move_away of <agent_types....            False   
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...             True   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.move_away of <agent_types....                []   
(<bound method Robot.follow of <agent_types.rob...               [3]   
(<bound method Robot.stay of <agent_types.robot...               [3]   
(<bound method Robot.go_to_charge_station of <a...            [3, 4]   

                                                   follower_autonomy  \
(<bound method Robot.move_away of <agent_types....               1.0   
(<bound method Robot.follow of <agent_types.rob...              -1.0   
(<bound method Robot.stay of <agent_types.robot...              -1.0   
(<bound method Robot.go_to_charge_station of <a...              -1.0   

                                                   follower_wellbeing  \
(<bound method Robot.move_away of <agent_types....                1.0   
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.move_away of <agent_types....           0.999108  
(<bound method Robot.follow of <agent_types.rob...           0.999108  
(<bound method Robot.stay of <agent_types.robot...           0.999108  
(<bound method Robot.go_to_charge_station of <a...           0.999108  
2023-01-17 07:45:45,893 - blackboard - Recommended actions: [(<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)]
2023-01-17 07:45:46,234 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:46,234 - blackboard - Starting tests...
2023-01-17 07:45:46,238 - blackboard - Running Deontology test.
2023-01-17 07:45:46,238 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:46,238 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,238 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:46,238 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,238 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:46,238 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,239 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:46,239 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:46,240 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:46,240 - blackboard - Running Utilitarian test.
2023-01-17 07:45:46,240 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:46,240 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,242 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,242 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,256 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:46,256 - blackboard - Testing completed.
2023-01-17 07:45:46,259 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99866  
(<bound method Robot.stay of <agent_types.robot...            0.99866  
(<bound method Robot.go_to_charge_station of <a...            0.99866  
2023-01-17 07:45:46,259 - blackboard - Calling the final evaluator.
2023-01-17 07:45:46,259 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:46,259 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,276 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(6, 1.1325373088709958), (1, 1.965870642204329), (12, 3.1325373088709956)]
2023-01-17 07:45:46,280 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:46,281 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:46,281 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,302 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.1325373088709958), (11, 3.1325373088709956), (2, 3.732537308870996), (29, 3.732537308870996)]
2023-01-17 07:45:46,307 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:46,308 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:46,308 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,328 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.1325373088709958), (3, 3.3825373088709956), (43, 6.504240821922915)]
2023-01-17 07:45:46,332 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:46,333 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:46,333 - blackboard - Evaluation completed.
2023-01-17 07:45:46,335 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99866  
(<bound method Robot.stay of <agent_types.robot...            0.99866  
(<bound method Robot.go_to_charge_station of <a...            0.99866  
2023-01-17 07:45:46,336 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:46,677 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:46,677 - blackboard - Starting tests...
2023-01-17 07:45:46,681 - blackboard - Running Deontology test.
2023-01-17 07:45:46,681 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:46,681 - elder_care_deontology_test - Testing action: <bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,682 - elder_care_deontology_test - Action (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:46,682 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,682 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [3]
2023-01-17 07:45:46,682 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,682 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [3]
2023-01-17 07:45:46,682 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:46,682 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [3, 4]
2023-01-17 07:45:46,682 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:46,683 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:46,683 - blackboard - Running Utilitarian test.
2023-01-17 07:45:46,683 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:46,684 - elder_care_utilitarian_test - Testing action: (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,686 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,688 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,688 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,704 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:46,704 - blackboard - Testing completed.
2023-01-17 07:45:46,708 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.move_away of <agent_types....                NaN   
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.move_away of <agent_types....            False   
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...             True   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.move_away of <agent_types....                []   
(<bound method Robot.follow of <agent_types.rob...               [3]   
(<bound method Robot.stay of <agent_types.robot...               [3]   
(<bound method Robot.go_to_charge_station of <a...            [3, 4]   

                                                   follower_autonomy  \
(<bound method Robot.move_away of <agent_types....               1.0   
(<bound method Robot.follow of <agent_types.rob...              -1.0   
(<bound method Robot.stay of <agent_types.robot...              -1.0   
(<bound method Robot.go_to_charge_station of <a...              -1.0   

                                                   follower_wellbeing  \
(<bound method Robot.move_away of <agent_types....                1.0   
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.move_away of <agent_types....           0.998209  
(<bound method Robot.follow of <agent_types.rob...           0.998209  
(<bound method Robot.stay of <agent_types.robot...           0.998209  
(<bound method Robot.go_to_charge_station of <a...           0.998209  
2023-01-17 07:45:46,708 - blackboard - Calling the final evaluator.
2023-01-17 07:45:46,708 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:46,708 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,727 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(10, 2.130537308870996), (28, 2.130537308870996), (31, 2.130537308870996), (34, 2.130537308870996)]
2023-01-17 07:45:46,732 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['autonomy'] intention
2023-01-17 07:45:46,733 - PSRB_eldercare_evaluator - Action move_away desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:46,733 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:46,754 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(12, 2.130537308870996), (30, 2.963870642204329), (6, 3.130537308870996)]
2023-01-17 07:45:46,758 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:45:46,759 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [3] broken and not accepted by experts.
2023-01-17 07:45:46,759 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,781 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(11, 2.130537308870996), (29, 2.730537308870996), (5, 3.130537308870996)]
2023-01-17 07:45:46,786 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:46,786 - PSRB_eldercare_evaluator - Action stay desirability: 0| Reason: rules [3] broken and not accepted by experts.
2023-01-17 07:45:46,786 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:46,804 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 3.130537308870996), (3, 5.380537308870996), (43, 8.502240821922914)]
2023-01-17 07:45:46,808 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:46,809 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [3, 4] broken and not accepted by experts.
2023-01-17 07:45:46,809 - blackboard - Evaluation completed.
2023-01-17 07:45:46,811 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.move_away of <agent_types....                  1   
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  0   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.move_away of <agent_types....            False   
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...             True   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.move_away of <agent_types....                []   
(<bound method Robot.follow of <agent_types.rob...               [3]   
(<bound method Robot.stay of <agent_types.robot...               [3]   
(<bound method Robot.go_to_charge_station of <a...            [3, 4]   

                                                   follower_autonomy  \
(<bound method Robot.move_away of <agent_types....               1.0   
(<bound method Robot.follow of <agent_types.rob...              -1.0   
(<bound method Robot.stay of <agent_types.robot...              -1.0   
(<bound method Robot.go_to_charge_station of <a...              -1.0   

                                                   follower_wellbeing  \
(<bound method Robot.move_away of <agent_types....                1.0   
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.move_away of <agent_types....           0.998209  
(<bound method Robot.follow of <agent_types.rob...           0.998209  
(<bound method Robot.stay of <agent_types.robot...           0.998209  
(<bound method Robot.go_to_charge_station of <a...           0.998209  
2023-01-17 07:45:46,812 - blackboard - Recommended actions: [(<bound method Robot.move_away of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)]
2023-01-17 07:45:47,153 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:47,153 - blackboard - Starting tests...
2023-01-17 07:45:47,157 - blackboard - Running Deontology test.
2023-01-17 07:45:47,157 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:47,157 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,157 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:47,157 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,158 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:47,158 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,158 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:47,158 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:47,159 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:47,159 - blackboard - Running Utilitarian test.
2023-01-17 07:45:47,159 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:47,160 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:47,161 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,161 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,173 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:47,173 - blackboard - Testing completed.
2023-01-17 07:45:47,175 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.997758  
(<bound method Robot.stay of <agent_types.robot...           0.997758  
(<bound method Robot.go_to_charge_station of <a...           0.997758  
2023-01-17 07:45:47,175 - blackboard - Calling the final evaluator.
2023-01-17 07:45:47,175 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:47,175 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:47,191 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(6, 1.1285373088709958), (1, 1.961870642204329), (12, 3.128537308870996)]
2023-01-17 07:45:47,196 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:47,197 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:47,197 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,219 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.1285373088709958), (11, 3.128537308870996), (2, 3.7285373088709957), (29, 3.7285373088709957)]
2023-01-17 07:45:47,224 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:47,225 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:47,225 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,243 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.1285373088709958), (3, 3.378537308870996), (43, 6.500240821922914)]
2023-01-17 07:45:47,247 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:47,247 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:47,247 - blackboard - Evaluation completed.
2023-01-17 07:45:47,250 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.997758  
(<bound method Robot.stay of <agent_types.robot...           0.997758  
(<bound method Robot.go_to_charge_station of <a...           0.997758  
2023-01-17 07:45:47,250 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:47,590 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:47,591 - blackboard - Starting tests...
2023-01-17 07:45:47,594 - blackboard - Running Deontology test.
2023-01-17 07:45:47,594 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:47,594 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,595 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:47,595 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,595 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:47,595 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:47,595 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:47,595 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:47,597 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:47,597 - blackboard - Running Utilitarian test.
2023-01-17 07:45:47,597 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:47,597 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:47,600 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,600 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,616 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:47,616 - blackboard - Testing completed.
2023-01-17 07:45:47,618 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.205631   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.997305  
(<bound method Robot.stay of <agent_types.robot...           0.997305  
(<bound method Robot.go_to_charge_station of <a...           0.997305  
2023-01-17 07:45:47,619 - blackboard - Calling the final evaluator.
2023-01-17 07:45:47,619 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:47,619 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:47,638 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(6, 1.1265373088709958), (1, 1.959870642204329), (12, 3.126537308870996)]
2023-01-17 07:45:47,642 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:47,642 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:47,642 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,665 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.9209063301488782), (2, 2.9321682875931137), (11, 3.9209063301488785)]
2023-01-17 07:45:47,669 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:47,669 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:47,669 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:47,691 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.1265373088709958), (3, 3.376537308870996), (43, 6.498240821922915)]
2023-01-17 07:45:47,695 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:47,696 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:47,696 - blackboard - Evaluation completed.
2023-01-17 07:45:47,698 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.205631   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.997305  
(<bound method Robot.stay of <agent_types.robot...           0.997305  
(<bound method Robot.go_to_charge_station of <a...           0.997305  
2023-01-17 07:45:47,698 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:48,045 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:48,046 - blackboard - Starting tests...
2023-01-17 07:45:48,049 - blackboard - Running Deontology test.
2023-01-17 07:45:48,049 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:48,049 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,049 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:48,049 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,049 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:48,049 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,050 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:48,050 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:48,051 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:48,051 - blackboard - Running Utilitarian test.
2023-01-17 07:45:48,051 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:48,051 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,055 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,055 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,070 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:48,070 - blackboard - Testing completed.
2023-01-17 07:45:48,072 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99685  
(<bound method Robot.stay of <agent_types.robot...            0.99685  
(<bound method Robot.go_to_charge_station of <a...            0.99685  
2023-01-17 07:45:48,072 - blackboard - Calling the final evaluator.
2023-01-17 07:45:48,072 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:48,072 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,091 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(6, 1.457870642204329), (1, 1.6245373088709956), (12, 3.457870642204329)]
2023-01-17 07:45:48,095 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:48,096 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:48,096 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,117 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.1245373088709956), (11, 3.1245373088709956), (2, 3.7245373088709957), (29, 3.7245373088709957)]
2023-01-17 07:45:48,123 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:48,123 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:48,123 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,142 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.1267088753799324), (3, 3.3723657423620588), (43, 6.494069255413977)]
2023-01-17 07:45:48,146 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:48,147 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:48,147 - blackboard - Evaluation completed.
2023-01-17 07:45:48,149 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99685  
(<bound method Robot.stay of <agent_types.robot...            0.99685  
(<bound method Robot.go_to_charge_station of <a...            0.99685  
2023-01-17 07:45:48,150 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:48,491 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:48,491 - blackboard - Starting tests...
2023-01-17 07:45:48,494 - blackboard - Running Deontology test.
2023-01-17 07:45:48,494 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:48,495 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,495 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:48,495 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,495 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:48,495 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,495 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:48,495 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:48,497 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:48,497 - blackboard - Running Utilitarian test.
2023-01-17 07:45:48,497 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:48,497 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,500 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,501 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,514 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:48,514 - blackboard - Testing completed.
2023-01-17 07:45:48,516 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.996393  
(<bound method Robot.stay of <agent_types.robot...           0.996393  
(<bound method Robot.go_to_charge_station of <a...           0.996393  
2023-01-17 07:45:48,516 - blackboard - Calling the final evaluator.
2023-01-17 07:45:48,517 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:48,517 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,534 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(1, 1.1225373088709958), (6, 1.9558706422043288), (30, 3.122537308870996)]
2023-01-17 07:45:48,539 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:48,539 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:48,539 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,563 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.7225373088709959), (2, 3.122537308870996), (29, 3.122537308870996)]
2023-01-17 07:45:48,567 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:48,568 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:48,568 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,587 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.3747088753799326), (3, 3.120365742362059), (43, 6.242069255413977)]
2023-01-17 07:45:48,592 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:48,592 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:48,593 - blackboard - Evaluation completed.
2023-01-17 07:45:48,595 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.996393  
(<bound method Robot.stay of <agent_types.robot...           0.996393  
(<bound method Robot.go_to_charge_station of <a...           0.996393  
2023-01-17 07:45:48,596 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:48,937 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:48,937 - blackboard - Starting tests...
2023-01-17 07:45:48,941 - blackboard - Running Deontology test.
2023-01-17 07:45:48,941 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:48,941 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,941 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:48,941 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,941 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:48,941 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:48,941 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:48,942 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:48,943 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:48,943 - blackboard - Running Utilitarian test.
2023-01-17 07:45:48,943 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:48,943 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,946 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,947 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:48,963 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:48,963 - blackboard - Testing completed.
2023-01-17 07:45:48,965 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995935  
(<bound method Robot.stay of <agent_types.robot...           0.995935  
(<bound method Robot.go_to_charge_station of <a...           0.995935  
2023-01-17 07:45:48,965 - blackboard - Calling the final evaluator.
2023-01-17 07:45:48,966 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:48,966 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:48,982 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(1, 1.1205373088709956), (6, 1.953870642204329), (30, 3.1205373088709956)]
2023-01-17 07:45:48,986 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:48,987 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:48,987 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,011 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.7205373088709957), (2, 3.1205373088709956), (29, 3.1205373088709956)]
2023-01-17 07:45:49,015 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:49,016 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:49,016 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,035 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.3727088753799324), (3, 3.1183657423620588), (43, 6.240069255413977)]
2023-01-17 07:45:49,039 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:49,040 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:49,040 - blackboard - Evaluation completed.
2023-01-17 07:45:49,042 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.997828   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995935  
(<bound method Robot.stay of <agent_types.robot...           0.995935  
(<bound method Robot.go_to_charge_station of <a...           0.995935  
2023-01-17 07:45:49,043 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:49,384 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:49,384 - blackboard - Starting tests...
2023-01-17 07:45:49,387 - blackboard - Running Deontology test.
2023-01-17 07:45:49,388 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:49,388 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,388 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:49,388 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,388 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:49,388 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,388 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:49,388 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:49,390 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:49,390 - blackboard - Running Utilitarian test.
2023-01-17 07:45:49,390 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:49,390 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:49,393 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,394 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,408 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:49,409 - blackboard - Testing completed.
2023-01-17 07:45:49,411 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995475  
(<bound method Robot.stay of <agent_types.robot...           0.995475  
(<bound method Robot.go_to_charge_station of <a...           0.995475  
2023-01-17 07:45:49,411 - blackboard - Calling the final evaluator.
2023-01-17 07:45:49,411 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:49,411 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:49,427 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(1, 1.1185373088709958), (6, 1.9518706422043288), (30, 3.118537308870996)]
2023-01-17 07:45:49,431 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:49,432 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:49,432 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,454 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 1.7185373088709959), (2, 3.118537308870996), (29, 3.118537308870996)]
2023-01-17 07:45:49,458 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:49,459 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:49,459 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,481 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.3685373088709958), (3, 3.118537308870996), (43, 6.240240821922915)]
2023-01-17 07:45:49,486 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:49,486 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:49,486 - blackboard - Evaluation completed.
2023-01-17 07:45:49,488 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995475  
(<bound method Robot.stay of <agent_types.robot...           0.995475  
(<bound method Robot.go_to_charge_station of <a...           0.995475  
2023-01-17 07:45:49,489 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:49,829 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:49,829 - blackboard - Starting tests...
2023-01-17 07:45:49,833 - blackboard - Running Deontology test.
2023-01-17 07:45:49,833 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:49,833 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,833 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Permissible
2023-01-17 07:45:49,833 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,833 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:49,833 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:49,833 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:49,834 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:49,835 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:49,835 - blackboard - Running Utilitarian test.
2023-01-17 07:45:49,835 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:49,835 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:49,839 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,839 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,856 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:49,856 - blackboard - Testing completed.
2023-01-17 07:45:49,859 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995014  
(<bound method Robot.stay of <agent_types.robot...           0.995014  
(<bound method Robot.go_to_charge_station of <a...           0.995014  
2023-01-17 07:45:49,860 - blackboard - Calling the final evaluator.
2023-01-17 07:45:49,860 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:49,860 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:49,882 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(1, 2.1165373088709956), (6, 2.9498706422043295), (36, 3.1165373088709956)]
2023-01-17 07:45:49,887 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 1 with ['wellbeing'] intention
2023-01-17 07:45:49,887 - PSRB_eldercare_evaluator - Action follow desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:49,888 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,914 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(5, 2.383203975537662), (35, 3.1165373088709956), (2, 3.7832039755376625), (29, 3.7832039755376625)]
2023-01-17 07:45:49,919 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:49,920 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:49,920 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:49,940 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(4, 1.3665373088709956), (3, 3.1165373088709956), (43, 6.238240821922914)]
2023-01-17 07:45:49,944 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:49,945 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:49,945 - blackboard - Evaluation completed.
2023-01-17 07:45:49,948 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...            False   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...                []   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...               0.0   
(<bound method Robot.stay of <agent_types.robot...               0.0   
(<bound method Robot.go_to_charge_station of <a...               0.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.995014  
(<bound method Robot.stay of <agent_types.robot...           0.995014  
(<bound method Robot.go_to_charge_station of <a...           0.995014  
2023-01-17 07:45:49,948 - blackboard - Recommended actions: [(<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:50,292 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:50,292 - blackboard - Starting tests...
2023-01-17 07:45:50,295 - blackboard - Running Deontology test.
2023-01-17 07:45:50,295 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:50,295 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,295 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:45:50,295 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,295 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:50,296 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,296 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:50,296 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:50,297 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:50,297 - blackboard - Running Utilitarian test.
2023-01-17 07:45:50,297 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:50,297 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:50,300 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,300 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,315 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:50,316 - blackboard - Testing completed.
2023-01-17 07:45:50,318 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99455  
(<bound method Robot.stay of <agent_types.robot...            0.99455  
(<bound method Robot.go_to_charge_station of <a...            0.99455  
2023-01-17 07:45:50,318 - blackboard - Calling the final evaluator.
2023-01-17 07:45:50,318 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:50,318 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:50,334 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 2.114537308870996), (33, 4.914537308870996), (36, 5.081203975537663)]
2023-01-17 07:45:50,338 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:45:50,339 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:45:50,339 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,361 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 2.114537308870996), (42, 3.795764631446723), (14, 4.306713480902903)]
2023-01-17 07:45:50,365 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy'] intention
2023-01-17 07:45:50,366 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:50,366 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,384 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(43, 3.9862408219229137), (9, 4.114537308870996), (15, 4.497189671379093)]
2023-01-17 07:45:50,388 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:50,389 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:50,389 - blackboard - Evaluation completed.
2023-01-17 07:45:50,391 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...                1.0   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.99455  
(<bound method Robot.stay of <agent_types.robot...            0.99455  
(<bound method Robot.go_to_charge_station of <a...            0.99455  
2023-01-17 07:45:50,391 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:50,732 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:50,733 - blackboard - Starting tests...
2023-01-17 07:45:50,739 - blackboard - Running Deontology test.
2023-01-17 07:45:50,739 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:50,739 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,740 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:45:50,740 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,740 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:50,740 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:50,740 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:50,741 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:50,742 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:50,743 - blackboard - Running Utilitarian test.
2023-01-17 07:45:50,743 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:50,743 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:50,748 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,749 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,769 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:50,769 - blackboard - Testing completed.
2023-01-17 07:45:50,772 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.407084   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.994086  
(<bound method Robot.stay of <agent_types.robot...           0.994086  
(<bound method Robot.go_to_charge_station of <a...           0.994086  
2023-01-17 07:45:50,772 - blackboard - Calling the final evaluator.
2023-01-17 07:45:50,772 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:50,773 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:45:50,791 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.1125373088709956), (33, 4.912537308870996), (36, 5.079203975537662)]
2023-01-17 07:45:50,795 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:45:50,796 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:45:50,796 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,818 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 1.7054536575237222), (14, 2.95762982955563), (42, 3.24668098009945)]
2023-01-17 07:45:50,822 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy'] intention
2023-01-17 07:45:50,823 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:50,823 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:50,845 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.519620960218269), (15, 3.1481060200318205), (43, 3.4371571705756407)]
2023-01-17 07:45:50,849 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:50,850 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:50,850 - blackboard - Evaluation completed.
2023-01-17 07:45:50,853 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.407084   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.994086  
(<bound method Robot.stay of <agent_types.robot...           0.994086  
(<bound method Robot.go_to_charge_station of <a...           0.994086  
2023-01-17 07:45:50,853 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:51,197 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:51,197 - blackboard - Starting tests...
2023-01-17 07:45:51,200 - blackboard - Running Deontology test.
2023-01-17 07:45:51,200 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:51,200 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,200 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,200 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:51,201 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,201 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,201 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:51,201 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,201 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,201 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:51,201 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:51,202 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:51,202 - blackboard - Running Utilitarian test.
2023-01-17 07:45:51,202 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:51,202 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,206 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,206 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,222 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:51,222 - blackboard - Testing completed.
2023-01-17 07:45:51,224 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.407084   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.993619  
(<bound method Robot.stay of <agent_types.robot...           0.993619  
(<bound method Robot.go_to_charge_station of <a...           0.993619  
2023-01-17 07:45:51,225 - blackboard - Calling the final evaluator.
2023-01-17 07:45:51,225 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:51,225 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,241 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 1.7374753856648077), (41, 1.8565265362086278), (16, 2.126526536208628)]
2023-01-17 07:45:51,245 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:51,245 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:51,246 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,266 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.8603917343175345), (42, 2.1494428848613545), (17, 2.273610187555901)]
2023-01-17 07:45:51,270 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:51,270 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:51,270 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,289 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.8603917343175345), (43, 2.1494428848613545), (18, 2.273610187555901)]
2023-01-17 07:45:51,293 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:51,294 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:51,294 - blackboard - Evaluation completed.
2023-01-17 07:45:51,296 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.407084   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.993619  
(<bound method Robot.stay of <agent_types.robot...           0.993619  
(<bound method Robot.go_to_charge_station of <a...           0.993619  
2023-01-17 07:45:51,296 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:51,637 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:51,637 - blackboard - Starting tests...
2023-01-17 07:45:51,640 - blackboard - Running Deontology test.
2023-01-17 07:45:51,641 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:51,641 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,641 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,641 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:51,641 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,641 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,641 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:51,641 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:51,641 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:51,641 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:51,641 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:51,642 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:51,643 - blackboard - Running Utilitarian test.
2023-01-17 07:45:51,643 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:51,643 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,646 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,646 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,663 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:51,664 - blackboard - Testing completed.
2023-01-17 07:45:51,666 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.394578   
(<bound method Robot.go_to_charge_station of <a...           0.394578   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.993151  
(<bound method Robot.stay of <agent_types.robot...           0.993151  
(<bound method Robot.go_to_charge_station of <a...           0.993151  
2023-01-17 07:45:51,666 - blackboard - Calling the final evaluator.
2023-01-17 07:45:51,666 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:51,666 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,682 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 1.4385857093892422), (41, 1.5576368599330621), (16, 1.8276368599330621)]
2023-01-17 07:45:51,686 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:51,687 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:51,687 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,707 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.5740081103671038), (42, 1.8630592609109238), (17, 1.9622144589552006)]
2023-01-17 07:45:51,711 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:51,712 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:51,712 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:51,729 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.5740081103671038), (43, 1.8630592609109238), (18, 1.9622144589552006)]
2023-01-17 07:45:51,733 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:51,733 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:51,733 - blackboard - Evaluation completed.
2023-01-17 07:45:51,735 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.394578   
(<bound method Robot.go_to_charge_station of <a...           0.394578   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.993151  
(<bound method Robot.stay of <agent_types.robot...           0.993151  
(<bound method Robot.go_to_charge_station of <a...           0.993151  
2023-01-17 07:45:51,736 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:52,075 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:52,075 - blackboard - Starting tests...
2023-01-17 07:45:52,079 - blackboard - Running Deontology test.
2023-01-17 07:45:52,079 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:52,079 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,080 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,080 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:52,080 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,080 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,080 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:52,080 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,080 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,080 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:52,081 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:52,082 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:52,082 - blackboard - Running Utilitarian test.
2023-01-17 07:45:52,082 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:52,082 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,086 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,086 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,105 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:52,105 - blackboard - Testing completed.
2023-01-17 07:45:52,108 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.381924   
(<bound method Robot.go_to_charge_station of <a...           0.381924   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.992681  
(<bound method Robot.stay of <agent_types.robot...           0.992681  
(<bound method Robot.go_to_charge_station of <a...           0.992681  
2023-01-17 07:45:52,108 - blackboard - Calling the final evaluator.
2023-01-17 07:45:52,108 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:52,108 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,127 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 1.2336616852451412), (41, 1.352712835788961), (16, 1.622712835788961)]
2023-01-17 07:45:52,132 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:52,133 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:52,133 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,156 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.3817380521637592), (42, 1.6707892027075792), (17, 1.744636468870343)]
2023-01-17 07:45:52,160 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:52,161 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:52,161 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,178 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.3817380521637592), (43, 1.6707892027075792), (18, 1.744636468870343)]
2023-01-17 07:45:52,181 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:52,182 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:52,182 - blackboard - Evaluation completed.
2023-01-17 07:45:52,184 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.381924   
(<bound method Robot.go_to_charge_station of <a...           0.381924   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.992681  
(<bound method Robot.stay of <agent_types.robot...           0.992681  
(<bound method Robot.go_to_charge_station of <a...           0.992681  
2023-01-17 07:45:52,185 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:52,524 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:52,524 - blackboard - Starting tests...
2023-01-17 07:45:52,529 - blackboard - Running Deontology test.
2023-01-17 07:45:52,529 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:52,529 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,529 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,529 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:52,530 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,530 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,530 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:52,530 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,530 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,530 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:52,530 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:52,531 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:52,531 - blackboard - Running Utilitarian test.
2023-01-17 07:45:52,532 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:52,532 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,535 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,535 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,554 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:52,554 - blackboard - Testing completed.
2023-01-17 07:45:52,556 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.369125   
(<bound method Robot.go_to_charge_station of <a...           0.369125   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.992209  
(<bound method Robot.stay of <agent_types.robot...           0.992209  
(<bound method Robot.go_to_charge_station of <a...           0.992209  
2023-01-17 07:45:52,557 - blackboard - Calling the final evaluator.
2023-01-17 07:45:52,557 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:52,557 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,573 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 1.0785330413943557), (41, 1.197584191938176), (16, 1.467584191938176)]
2023-01-17 07:45:52,577 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:52,578 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:52,578 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,598 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.2394082101876334), (42, 1.5284593607314536), (17, 1.5767090231448984)]
2023-01-17 07:45:52,602 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:52,602 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:52,603 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,620 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.2394082101876334), (43, 1.5284593607314536), (18, 1.5767090231448984)]
2023-01-17 07:45:52,624 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:52,624 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:52,624 - blackboard - Evaluation completed.
2023-01-17 07:45:52,626 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.369125   
(<bound method Robot.go_to_charge_station of <a...           0.369125   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.992209  
(<bound method Robot.stay of <agent_types.robot...           0.992209  
(<bound method Robot.go_to_charge_station of <a...           0.992209  
2023-01-17 07:45:52,627 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:52,966 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:52,966 - blackboard - Starting tests...
2023-01-17 07:45:52,969 - blackboard - Running Deontology test.
2023-01-17 07:45:52,970 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:52,970 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,970 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,970 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:52,970 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,970 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,971 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:52,971 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:52,971 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:52,971 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:52,971 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:52,972 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:52,972 - blackboard - Running Utilitarian test.
2023-01-17 07:45:52,972 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:52,972 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,976 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,976 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:52,995 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:52,995 - blackboard - Testing completed.
2023-01-17 07:45:52,998 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.356184   
(<bound method Robot.go_to_charge_station of <a...           0.356184   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.991736  
(<bound method Robot.stay of <agent_types.robot...           0.991736  
(<bound method Robot.go_to_charge_station of <a...           0.991736  
2023-01-17 07:45:52,998 - blackboard - Calling the final evaluator.
2023-01-17 07:45:52,998 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:52,998 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,015 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.9541199070408143), (41, 1.0731710575846345), (16, 1.3431710575846343)]
2023-01-17 07:45:53,019 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,020 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:53,020 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,042 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.1279354350590256), (42, 1.4169865856028456), (17, 1.439355529566423)]
2023-01-17 07:45:53,046 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,047 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:53,047 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,069 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.1279354350590256), (43, 1.4169865856028456), (18, 1.439355529566423)]
2023-01-17 07:45:53,074 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:53,074 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:53,075 - blackboard - Evaluation completed.
2023-01-17 07:45:53,077 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.356184   
(<bound method Robot.go_to_charge_station of <a...           0.356184   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.991736  
(<bound method Robot.stay of <agent_types.robot...           0.991736  
(<bound method Robot.go_to_charge_station of <a...           0.991736  
2023-01-17 07:45:53,079 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:53,417 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:53,417 - blackboard - Starting tests...
2023-01-17 07:45:53,422 - blackboard - Running Deontology test.
2023-01-17 07:45:53,422 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:53,422 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,422 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,422 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:53,422 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,423 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,423 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:53,423 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,423 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,423 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:53,423 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:53,424 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:53,424 - blackboard - Running Utilitarian test.
2023-01-17 07:45:53,424 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:53,425 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,428 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,428 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,445 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:53,445 - blackboard - Testing completed.
2023-01-17 07:45:53,447 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.343106   
(<bound method Robot.go_to_charge_station of <a...           0.343106   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...            0.99126  
(<bound method Robot.stay of <agent_types.robot...            0.99126  
(<bound method Robot.go_to_charge_station of <a...            0.99126  
2023-01-17 07:45:53,447 - blackboard - Calling the final evaluator.
2023-01-17 07:45:53,447 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:53,447 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,464 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.8504791981792343), (41, 0.9695303487230545), (16, 1.2395303487230545)]
2023-01-17 07:45:53,468 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,469 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:53,469 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,492 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 1.0373731642129096), (17, 1.3226363826893792), (42, 1.3264243147567298)]
2023-01-17 07:45:53,496 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,496 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:53,496 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,513 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 1.0373731642129096), (18, 1.3226363826893792), (43, 1.3264243147567298)]
2023-01-17 07:45:53,517 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:53,518 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:53,518 - blackboard - Evaluation completed.
2023-01-17 07:45:53,520 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.343106   
(<bound method Robot.go_to_charge_station of <a...           0.343106   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...            0.99126  
(<bound method Robot.stay of <agent_types.robot...            0.99126  
(<bound method Robot.go_to_charge_station of <a...            0.99126  
2023-01-17 07:45:53,520 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:53,860 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:53,860 - blackboard - Starting tests...
2023-01-17 07:45:53,863 - blackboard - Running Deontology test.
2023-01-17 07:45:53,864 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:53,864 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,864 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,864 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:53,864 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,864 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,864 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:53,864 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:53,864 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:53,865 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:53,865 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:53,866 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:53,866 - blackboard - Running Utilitarian test.
2023-01-17 07:45:53,866 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:53,866 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,870 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,870 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,887 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:53,887 - blackboard - Testing completed.
2023-01-17 07:45:53,889 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.329893   
(<bound method Robot.go_to_charge_station of <a...           0.329893   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.990783  
(<bound method Robot.stay of <agent_types.robot...           0.990783  
(<bound method Robot.go_to_charge_station of <a...           0.990783  
2023-01-17 07:45:53,889 - blackboard - Calling the final evaluator.
2023-01-17 07:45:53,889 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:53,889 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,904 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.7617871662245075), (41, 0.8808383167683276), (16, 1.1508383167683276)]
2023-01-17 07:45:53,908 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,908 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:53,908 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,928 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 0.9618939719929136), (17, 1.2207315109999215), (42, 1.2509451225367336)]
2023-01-17 07:45:53,933 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:53,934 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:53,934 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:53,951 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 0.9618939719929136), (18, 1.2207315109999215), (43, 1.2509451225367336)]
2023-01-17 07:45:53,956 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:53,956 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:53,956 - blackboard - Evaluation completed.
2023-01-17 07:45:53,959 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.329893   
(<bound method Robot.go_to_charge_station of <a...           0.329893   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.990783  
(<bound method Robot.stay of <agent_types.robot...           0.990783  
(<bound method Robot.go_to_charge_station of <a...           0.990783  
2023-01-17 07:45:53,959 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:54,298 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:54,298 - blackboard - Starting tests...
2023-01-17 07:45:54,301 - blackboard - Running Deontology test.
2023-01-17 07:45:54,302 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:54,302 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,302 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,302 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:54,302 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,302 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,302 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:54,302 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,303 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,303 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:54,303 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:54,304 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:54,304 - blackboard - Running Utilitarian test.
2023-01-17 07:45:54,304 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:54,304 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,308 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,308 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,327 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:54,327 - blackboard - Testing completed.
2023-01-17 07:45:54,330 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...            0.31655   
(<bound method Robot.go_to_charge_station of <a...            0.31655   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.990305  
(<bound method Robot.stay of <agent_types.robot...           0.990305  
(<bound method Robot.go_to_charge_station of <a...           0.990305  
2023-01-17 07:45:54,331 - blackboard - Calling the final evaluator.
2023-01-17 07:45:54,331 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:54,331 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,349 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.684346989495038), (41, 0.8033981400388581), (16, 1.073398140038858)]
2023-01-17 07:45:54,356 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:54,357 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:54,357 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,386 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 0.8977971631493642), (17, 1.1299479663845318), (42, 1.1868483136931842)]
2023-01-17 07:45:54,390 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:54,390 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:54,391 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,408 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 0.8977971631493642), (18, 1.1299479663845318), (43, 1.1868483136931842)]
2023-01-17 07:45:54,411 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:54,412 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:54,412 - blackboard - Evaluation completed.
2023-01-17 07:45:54,414 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...            0.31655   
(<bound method Robot.go_to_charge_station of <a...            0.31655   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.990305  
(<bound method Robot.stay of <agent_types.robot...           0.990305  
(<bound method Robot.go_to_charge_station of <a...           0.990305  
2023-01-17 07:45:54,415 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:54,756 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:54,756 - blackboard - Starting tests...
2023-01-17 07:45:54,760 - blackboard - Running Deontology test.
2023-01-17 07:45:54,760 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:54,760 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,760 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,761 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:54,761 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,761 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,761 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:54,761 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:54,761 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:54,761 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:54,761 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:54,762 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:54,762 - blackboard - Running Utilitarian test.
2023-01-17 07:45:54,762 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:54,762 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,766 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,766 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,783 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:54,783 - blackboard - Testing completed.
2023-01-17 07:45:54,785 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...            0.30308   
(<bound method Robot.go_to_charge_station of <a...            0.30308   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.989824  
(<bound method Robot.stay of <agent_types.robot...           0.989824  
(<bound method Robot.go_to_charge_station of <a...           0.989824  
2023-01-17 07:45:54,785 - blackboard - Calling the final evaluator.
2023-01-17 07:45:54,785 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:54,785 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,800 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.6156692611832436), (41, 0.7347204117270637), (16, 1.0047204117270636)]
2023-01-17 07:45:54,804 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:54,805 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:54,805 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,828 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 0.842589263383667), (17, 1.0478004095266402), (42, 1.131640413927487)]
2023-01-17 07:45:54,833 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:54,834 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:54,834 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:54,856 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 0.842589263383667), (18, 1.0478004095266402), (43, 1.131640413927487)]
2023-01-17 07:45:54,860 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:54,861 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:54,861 - blackboard - Evaluation completed.
2023-01-17 07:45:54,864 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...            0.30308   
(<bound method Robot.go_to_charge_station of <a...            0.30308   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.989824  
(<bound method Robot.stay of <agent_types.robot...           0.989824  
(<bound method Robot.go_to_charge_station of <a...           0.989824  
2023-01-17 07:45:54,864 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:55,207 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:55,207 - blackboard - Starting tests...
2023-01-17 07:45:55,210 - blackboard - Running Deontology test.
2023-01-17 07:45:55,210 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:55,210 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,211 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,211 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:55,211 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,211 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,211 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:55,211 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,211 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,211 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:55,211 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:55,213 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:55,213 - blackboard - Running Utilitarian test.
2023-01-17 07:45:55,213 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:55,213 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,217 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,217 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,235 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:55,235 - blackboard - Testing completed.
2023-01-17 07:45:55,238 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.289488   
(<bound method Robot.go_to_charge_station of <a...           0.289488   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.989342  
(<bound method Robot.stay of <agent_types.robot...           0.989342  
(<bound method Robot.go_to_charge_station of <a...           0.989342  
2023-01-17 07:45:55,238 - blackboard - Calling the final evaluator.
2023-01-17 07:45:55,238 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:55,238 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,254 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.5539999999999993), (41, 0.6730511505438194), (16, 0.9430511505438193)]
2023-01-17 07:45:55,258 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:55,258 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:55,258 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,279 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 0.7945120331324315), (17, 0.9725391174113871), (42, 1.0835631836762514)]
2023-01-17 07:45:55,283 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:55,284 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:55,284 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,304 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 0.7945120331324315), (18, 0.9725391174113871), (43, 1.0835631836762514)]
2023-01-17 07:45:55,309 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:55,309 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:55,309 - blackboard - Evaluation completed.
2023-01-17 07:45:55,312 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.289488   
(<bound method Robot.go_to_charge_station of <a...           0.289488   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.989342  
(<bound method Robot.stay of <agent_types.robot...           0.989342  
(<bound method Robot.go_to_charge_station of <a...           0.989342  
2023-01-17 07:45:55,312 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:55,652 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:55,652 - blackboard - Starting tests...
2023-01-17 07:45:55,656 - blackboard - Running Deontology test.
2023-01-17 07:45:55,656 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:55,656 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,656 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,656 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:55,657 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,657 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,657 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:55,657 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:55,657 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:55,657 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:55,657 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:55,658 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:55,659 - blackboard - Running Utilitarian test.
2023-01-17 07:45:55,659 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:55,659 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,662 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,663 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,681 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:55,681 - blackboard - Testing completed.
2023-01-17 07:45:55,683 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.275778   
(<bound method Robot.go_to_charge_station of <a...           0.275778   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.988858  
(<bound method Robot.stay of <agent_types.robot...           0.988858  
(<bound method Robot.go_to_charge_station of <a...           0.988858  
2023-01-17 07:45:55,683 - blackboard - Calling the final evaluator.
2023-01-17 07:45:55,683 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:55,683 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,698 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(13, 0.6059417378197415), (41, 0.6171094127240772), (16, 0.8871094127240771)]
2023-01-17 07:45:55,702 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:55,703 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:55,703 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,723 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(14, 0.8601635589221447), (17, 0.9028875916216739), (42, 1.0413312338264804)]
2023-01-17 07:45:55,728 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:55,729 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:55,729 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:55,746 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(15, 0.8601635589221447), (18, 0.9028875916216739), (43, 1.0413312338264804)]
2023-01-17 07:45:55,750 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:55,750 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:55,750 - blackboard - Evaluation completed.
2023-01-17 07:45:55,752 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.275778   
(<bound method Robot.go_to_charge_station of <a...           0.275778   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.988858  
(<bound method Robot.stay of <agent_types.robot...           0.988858  
(<bound method Robot.go_to_charge_station of <a...           0.988858  
2023-01-17 07:45:55,753 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:56,091 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:56,091 - blackboard - Starting tests...
2023-01-17 07:45:56,095 - blackboard - Running Deontology test.
2023-01-17 07:45:56,095 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:56,095 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,095 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,095 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:56,095 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,095 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,095 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:56,095 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,095 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,096 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:56,096 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:56,098 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:56,098 - blackboard - Running Utilitarian test.
2023-01-17 07:45:56,098 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:56,098 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,101 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,101 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,118 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:56,118 - blackboard - Testing completed.
2023-01-17 07:45:56,120 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.261955   
(<bound method Robot.go_to_charge_station of <a...           0.261955   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.988372  
(<bound method Robot.stay of <agent_types.robot...           0.988372  
(<bound method Robot.go_to_charge_station of <a...           0.988372  
2023-01-17 07:45:56,121 - blackboard - Calling the final evaluator.
2023-01-17 07:45:56,121 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:56,121 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,135 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.5659320575842075), (13, 0.6531190929596111), (16, 0.8359320575842074)]
2023-01-17 07:45:56,139 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:56,140 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:56,140 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,159 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.8378873196146187), (14, 0.9211638309291998), (42, 1.0039767955537962)]
2023-01-17 07:45:56,163 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:56,164 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:56,164 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,183 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.8378873196146187), (15, 0.9211638309291998), (43, 1.0039767955537962)]
2023-01-17 07:45:56,187 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:56,188 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:56,188 - blackboard - Evaluation completed.
2023-01-17 07:45:56,190 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.261955   
(<bound method Robot.go_to_charge_station of <a...           0.261955   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.988372  
(<bound method Robot.stay of <agent_types.robot...           0.988372  
(<bound method Robot.go_to_charge_station of <a...           0.988372  
2023-01-17 07:45:56,191 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:56,533 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:56,533 - blackboard - Starting tests...
2023-01-17 07:45:56,537 - blackboard - Running Deontology test.
2023-01-17 07:45:56,537 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:56,537 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,537 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,537 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:56,537 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,537 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,537 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:56,537 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,538 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,538 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:56,538 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:56,539 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:56,540 - blackboard - Running Utilitarian test.
2023-01-17 07:45:56,540 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:56,540 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,543 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,543 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,562 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:56,562 - blackboard - Testing completed.
2023-01-17 07:45:56,564 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.248024   
(<bound method Robot.go_to_charge_station of <a...           0.248024   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.987884  
(<bound method Robot.stay of <agent_types.robot...           0.987884  
(<bound method Robot.go_to_charge_station of <a...           0.987884  
2023-01-17 07:45:56,565 - blackboard - Calling the final evaluator.
2023-01-17 07:45:56,565 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:56,565 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,582 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.5187771947466717), (13, 0.6962739557971469), (16, 0.7887771947466716)]
2023-01-17 07:45:56,585 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:56,586 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:56,586 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,616 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.8007531723979696), (42, 0.9707531723979697), (14, 0.9782499334484449)]
2023-01-17 07:45:56,620 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:56,621 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:56,621 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:56,643 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.8007531723979696), (43, 0.9707531723979697), (15, 0.9782499334484449)]
2023-01-17 07:45:56,647 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:56,647 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:56,647 - blackboard - Evaluation completed.
2023-01-17 07:45:56,649 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.248024   
(<bound method Robot.go_to_charge_station of <a...           0.248024   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.987884  
(<bound method Robot.stay of <agent_types.robot...           0.987884  
(<bound method Robot.go_to_charge_station of <a...           0.987884  
2023-01-17 07:45:56,650 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:56,990 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:56,990 - blackboard - Starting tests...
2023-01-17 07:45:56,993 - blackboard - Running Deontology test.
2023-01-17 07:45:56,994 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:56,994 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,994 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,994 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:56,994 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,994 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,994 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:56,995 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:56,995 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:56,995 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:56,995 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:56,996 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:56,996 - blackboard - Running Utilitarian test.
2023-01-17 07:45:56,997 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:56,997 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,000 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,000 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,017 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:57,018 - blackboard - Testing completed.
2023-01-17 07:45:57,021 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.233989   
(<bound method Robot.go_to_charge_station of <a...           0.233989   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.987395  
(<bound method Robot.stay of <agent_types.robot...           0.987395  
(<bound method Robot.go_to_charge_station of <a...           0.987395  
2023-01-17 07:45:57,021 - blackboard - Calling the final evaluator.
2023-01-17 07:45:57,021 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:57,021 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,036 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.4750616064983748), (13, 0.7359895440454438), (16, 0.7450616064983747)]
2023-01-17 07:45:57,040 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:45:57,041 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:57,041 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,061 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.7710721680379157), (42, 0.9410721680379157), (14, 1.0320001055849848)]
2023-01-17 07:45:57,065 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:57,066 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:57,066 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,083 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.7710721680379157), (43, 0.9410721680379157), (15, 1.0320001055849848)]
2023-01-17 07:45:57,087 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:57,088 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:57,088 - blackboard - Evaluation completed.
2023-01-17 07:45:57,090 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.233989   
(<bound method Robot.go_to_charge_station of <a...           0.233989   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.987395  
(<bound method Robot.stay of <agent_types.robot...           0.987395  
(<bound method Robot.go_to_charge_station of <a...           0.987395  
2023-01-17 07:45:57,091 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:57,430 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:57,430 - blackboard - Starting tests...
2023-01-17 07:45:57,434 - blackboard - Running Deontology test.
2023-01-17 07:45:57,434 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:57,434 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,434 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,435 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:57,435 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,435 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,435 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:57,435 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,435 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,435 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:57,435 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:57,437 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:57,437 - blackboard - Running Utilitarian test.
2023-01-17 07:45:57,437 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:57,438 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,441 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,441 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,459 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:57,460 - blackboard - Testing completed.
2023-01-17 07:45:57,463 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.219857   
(<bound method Robot.go_to_charge_station of <a...           0.219857   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.986904  
(<bound method Robot.stay of <agent_types.robot...           0.986904  
(<bound method Robot.go_to_charge_station of <a...           0.986904  
2023-01-17 07:45:57,463 - blackboard - Calling the final evaluator.
2023-01-17 07:45:57,463 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:57,463 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,484 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.43431876675209113), (16, 0.704318766752091), (13, 0.7727323837917273)]
2023-01-17 07:45:57,489 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:57,490 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:57,490 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,515 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.7444621112284616), (42, 0.9144621112284617), (14, 1.0828757282680979)]
2023-01-17 07:45:57,519 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:57,520 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken and accepted by experts.
2023-01-17 07:45:57,520 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,543 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.7444621112284616), (43, 0.9144621112284617), (15, 1.0828757282680979)]
2023-01-17 07:45:57,547 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:45:57,548 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:57,549 - blackboard - Evaluation completed.
2023-01-17 07:45:57,551 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.219857   
(<bound method Robot.go_to_charge_station of <a...           0.219857   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.986904  
(<bound method Robot.stay of <agent_types.robot...           0.986904  
(<bound method Robot.go_to_charge_station of <a...           0.986904  
2023-01-17 07:45:57,552 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:45:57,892 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:45:57,892 - blackboard - Starting tests...
2023-01-17 07:45:57,895 - blackboard - Running Deontology test.
2023-01-17 07:45:57,896 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:45:57,896 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,896 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,896 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:45:57,896 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,896 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,896 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:45:57,896 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:45:57,896 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:45:57,897 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:45:57,897 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:45:57,898 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:45:57,898 - blackboard - Running Utilitarian test.
2023-01-17 07:45:57,898 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:45:57,898 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,901 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,902 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,920 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:45:57,920 - blackboard - Testing completed.
2023-01-17 07:45:57,923 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.205631   
(<bound method Robot.go_to_charge_station of <a...           0.205631   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...            0.98641  
(<bound method Robot.stay of <agent_types.robot...            0.98641  
(<bound method Robot.go_to_charge_station of <a...            0.98641  
2023-01-17 07:45:57,924 - blackboard - Calling the final evaluator.
2023-01-17 07:45:57,924 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:45:57,924 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,949 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.3961698389678756), (16, 0.6661698389678755), (13, 0.8068813115759428)]
2023-01-17 07:45:57,954 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:45:57,955 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:45:57,955 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:57,985 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.720538860245758), (42, 0.890538860245758), (20, 1.1233877572934197)]
2023-01-17 07:45:57,990 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:45:57,991 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:45:57,991 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:45:58,012 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.720538860245758), (43, 0.890538860245758), (21, 1.1233877572934197)]
2023-01-17 07:45:58,017 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:45:58,018 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:45:58,018 - blackboard - Evaluation completed.
2023-01-17 07:45:58,020 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.205631   
(<bound method Robot.go_to_charge_station of <a...           0.205631   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...            0.98641  
(<bound method Robot.stay of <agent_types.robot...            0.98641  
(<bound method Robot.go_to_charge_station of <a...            0.98641  
2023-01-17 07:45:58,021 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:01,222 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:01,223 - blackboard - Starting tests...
2023-01-17 07:47:01,228 - blackboard - Running Deontology test.
2023-01-17 07:47:01,228 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:01,228 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,228 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,229 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:47:01,229 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,229 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,230 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:01,230 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,230 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,230 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:01,230 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:01,231 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:01,232 - blackboard - Running Utilitarian test.
2023-01-17 07:47:01,232 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:01,232 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,235 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,235 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,257 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:01,258 - blackboard - Testing completed.
2023-01-17 07:47:01,262 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.191318   
(<bound method Robot.go_to_charge_station of <a...           0.191318   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.985915  
(<bound method Robot.stay of <agent_types.robot...           0.985915  
(<bound method Robot.go_to_charge_station of <a...           0.985915  
2023-01-17 07:47:01,262 - blackboard - Calling the final evaluator.
2023-01-17 07:47:01,262 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:01,262 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,288 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.36030312759327876), (16, 0.6303031275932787), (13, 0.8387480229505396)]
2023-01-17 07:47:01,293 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['autonomy', 'wellbeing'] intention
2023-01-17 07:47:01,293 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 0| Reason: rules [2] broken and not accepted by experts.
2023-01-17 07:47:01,294 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,319 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.6989852613871539), (42, 0.8689852613871539), (20, 1.0732079334028302)]
2023-01-17 07:47:01,325 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:01,326 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:01,326 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,357 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.6989852613871539), (43, 0.8689852613871539), (21, 1.0732079334028302)]
2023-01-17 07:47:01,362 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:01,363 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:01,363 - blackboard - Evaluation completed.
2023-01-17 07:47:01,366 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.191318   
(<bound method Robot.go_to_charge_station of <a...           0.191318   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.985915  
(<bound method Robot.stay of <agent_types.robot...           0.985915  
(<bound method Robot.go_to_charge_station of <a...           0.985915  
2023-01-17 07:47:01,367 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:01,709 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:01,709 - blackboard - Starting tests...
2023-01-17 07:47:01,712 - blackboard - Running Deontology test.
2023-01-17 07:47:01,712 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:01,712 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,713 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,713 - elder_care_deontology_test - Action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [2]
2023-01-17 07:47:01,713 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,713 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,713 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:01,713 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:01,713 - elder_care_deontology_test - Variable: stakeholders.follower.seen_locationnot found in env.
2023-01-17 07:47:01,713 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:01,713 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:01,715 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:01,715 - blackboard - Running Utilitarian test.
2023-01-17 07:47:01,715 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:01,716 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,719 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,719 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,738 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:01,738 - blackboard - Testing completed.
2023-01-17 07:47:01,740 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.176923   
(<bound method Robot.go_to_charge_station of <a...           0.176923   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.985419  
(<bound method Robot.stay of <agent_types.robot...           0.985419  
(<bound method Robot.go_to_charge_station of <a...           0.985419  
2023-01-17 07:47:01,740 - blackboard - Calling the final evaluator.
2023-01-17 07:47:01,740 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:01,741 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,757 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(41, 0.3264591950436718), (16, 0.5964591950436717), (19, 0.8180461346470984)]
2023-01-17 07:47:01,762 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 1 with ['wellbeing'] intention
2023-01-17 07:47:01,762 - PSRB_eldercare_evaluator - Action go_to_last_seen desirability: 1| Reason: rules [2]broken, but accepted by experts. Since it increases ['wellbeing']values greatly, deemed accepted by PSRB system.
2023-01-17 07:47:01,762 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,782 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 0.6795362735308783), (42, 0.8495362735308783), (20, 1.0249690561598919)]
2023-01-17 07:47:01,786 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:01,787 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:01,787 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:01,804 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 0.6795362735308783), (43, 0.8495362735308783), (21, 1.0249690561598919)]
2023-01-17 07:47:01,808 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:01,808 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:01,808 - blackboard - Evaluation completed.
2023-01-17 07:47:01,810 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.go_to_last_seen of <agent_...                  1   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.go_to_last_seen of <agent_...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.go_to_last_seen of <agent_...               [2]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.go_to_last_seen of <agent_...              -0.7   
(<bound method Robot.stay of <agent_types.robot...               1.0   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.go_to_last_seen of <agent_...                0.7   
(<bound method Robot.stay of <agent_types.robot...           0.176923   
(<bound method Robot.go_to_charge_station of <a...           0.176923   

                                                   robot_availability  
(<bound method Robot.go_to_last_seen of <agent_...           0.985419  
(<bound method Robot.stay of <agent_types.robot...           0.985419  
(<bound method Robot.go_to_charge_station of <a...           0.985419  
2023-01-17 07:47:01,811 - blackboard - Recommended actions: [(<bound method Robot.go_to_last_seen of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,), (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:02,155 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:02,155 - blackboard - Starting tests...
2023-01-17 07:47:02,158 - blackboard - Running Deontology test.
2023-01-17 07:47:02,159 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:02,159 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,159 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:02,159 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,159 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:02,159 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,159 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:02,159 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:02,161 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:02,161 - blackboard - Running Utilitarian test.
2023-01-17 07:47:02,161 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:02,161 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:02,164 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,165 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,178 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:02,178 - blackboard - Testing completed.
2023-01-17 07:47:02,180 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.162452   
(<bound method Robot.go_to_charge_station of <a...           0.162452   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.98492  
(<bound method Robot.stay of <agent_types.robot...            0.98492  
(<bound method Robot.go_to_charge_station of <a...            0.98492  
2023-01-17 07:47:02,180 - blackboard - Calling the final evaluator.
2023-01-17 07:47:02,181 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:02,181 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:02,200 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 3.1006439734356146), (33, 5.9006439734356135), (36, 7.0673106401022805)]
2023-01-17 07:47:02,204 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:02,205 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:02,205 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,231 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(17, 4.057206081396057), (42, 4.227206081396057), (26, 4.273696791971576)]
2023-01-17 07:47:02,235 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:02,236 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:02,236 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,256 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(18, 1.947682271872247), (43, 2.1176822718722472), (21, 2.264172982447766)]
2023-01-17 07:47:02,260 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing'] intention
2023-01-17 07:47:02,261 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:02,261 - blackboard - Evaluation completed.
2023-01-17 07:47:02,263 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...           0.162452   
(<bound method Robot.go_to_charge_station of <a...           0.162452   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...            0.98492  
(<bound method Robot.stay of <agent_types.robot...            0.98492  
(<bound method Robot.go_to_charge_station of <a...            0.98492  
2023-01-17 07:47:02,264 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:02,606 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:02,606 - blackboard - Starting tests...
2023-01-17 07:47:02,609 - blackboard - Running Deontology test.
2023-01-17 07:47:02,610 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:02,610 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,610 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:02,610 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,610 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:02,610 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:02,610 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:02,610 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:02,612 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:02,612 - blackboard - Running Utilitarian test.
2023-01-17 07:47:02,612 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:02,612 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:02,616 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,616 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,630 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:02,630 - blackboard - Testing completed.
2023-01-17 07:47:02,633 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.984419  
(<bound method Robot.stay of <agent_types.robot...           0.984419  
(<bound method Robot.go_to_charge_station of <a...           0.984419  
2023-01-17 07:47:02,633 - blackboard - Calling the final evaluator.
2023-01-17 07:47:02,633 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:02,633 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:02,652 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.572537308870995), (33, 4.372537308870995), (36, 5.539203975537661)]
2023-01-17 07:47:02,656 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:02,657 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:02,657 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,680 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.372537308870995), (32, 4.372537308870995), (42, 5.053764631446723)]
2023-01-17 07:47:02,684 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:02,685 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:02,685 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:02,706 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.479620960218268), (15, 3.1081060200318196), (43, 3.39715717057564)]
2023-01-17 07:47:02,710 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:02,711 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:02,711 - blackboard - Evaluation completed.
2023-01-17 07:47:02,714 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.984419  
(<bound method Robot.stay of <agent_types.robot...           0.984419  
(<bound method Robot.go_to_charge_station of <a...           0.984419  
2023-01-17 07:47:02,715 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:03,055 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:03,055 - blackboard - Starting tests...
2023-01-17 07:47:03,058 - blackboard - Running Deontology test.
2023-01-17 07:47:03,058 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:03,059 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,059 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:03,059 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,059 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:03,059 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,059 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:03,059 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:03,061 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:03,061 - blackboard - Running Utilitarian test.
2023-01-17 07:47:03,061 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:03,061 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,064 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,064 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,077 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:03,077 - blackboard - Testing completed.
2023-01-17 07:47:03,079 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.983917  
(<bound method Robot.stay of <agent_types.robot...           0.983917  
(<bound method Robot.go_to_charge_station of <a...           0.983917  
2023-01-17 07:47:03,080 - blackboard - Calling the final evaluator.
2023-01-17 07:47:03,080 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:03,080 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,096 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5705373088709949), (33, 4.370537308870995), (36, 5.537203975537661)]
2023-01-17 07:47:03,100 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:03,101 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:03,101 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,124 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.370537308870995), (32, 4.370537308870995), (42, 5.051764631446723)]
2023-01-17 07:47:03,128 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:03,129 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:03,129 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,147 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.4776209602182684), (15, 3.10610602003182), (43, 3.39515717057564)]
2023-01-17 07:47:03,151 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:03,152 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:03,152 - blackboard - Evaluation completed.
2023-01-17 07:47:03,155 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.983917  
(<bound method Robot.stay of <agent_types.robot...           0.983917  
(<bound method Robot.go_to_charge_station of <a...           0.983917  
2023-01-17 07:47:03,155 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:03,495 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:03,495 - blackboard - Starting tests...
2023-01-17 07:47:03,498 - blackboard - Running Deontology test.
2023-01-17 07:47:03,499 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:03,499 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,499 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:03,499 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,499 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:03,499 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,499 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:03,499 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:03,500 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:03,501 - blackboard - Running Utilitarian test.
2023-01-17 07:47:03,501 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:03,501 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,504 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,504 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,517 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:03,517 - blackboard - Testing completed.
2023-01-17 07:47:03,519 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.983412  
(<bound method Robot.stay of <agent_types.robot...           0.983412  
(<bound method Robot.go_to_charge_station of <a...           0.983412  
2023-01-17 07:47:03,520 - blackboard - Calling the final evaluator.
2023-01-17 07:47:03,520 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:03,520 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,537 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.568537308870995), (33, 4.368537308870995), (36, 5.535203975537661)]
2023-01-17 07:47:03,541 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:03,541 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:03,541 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,563 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.3685373088709953), (32, 4.368537308870995), (42, 5.049764631446723)]
2023-01-17 07:47:03,567 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:03,568 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:03,568 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,595 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.4756209602182686), (15, 3.1041060200318196), (43, 3.39315717057564)]
2023-01-17 07:47:03,600 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:03,601 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:03,601 - blackboard - Evaluation completed.
2023-01-17 07:47:03,604 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.983412  
(<bound method Robot.stay of <agent_types.robot...           0.983412  
(<bound method Robot.go_to_charge_station of <a...           0.983412  
2023-01-17 07:47:03,604 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:03,945 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:03,945 - blackboard - Starting tests...
2023-01-17 07:47:03,948 - blackboard - Running Deontology test.
2023-01-17 07:47:03,948 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:03,949 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,949 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:03,949 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,949 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:03,949 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:03,949 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:03,949 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:03,951 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:03,951 - blackboard - Running Utilitarian test.
2023-01-17 07:47:03,951 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:03,951 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,954 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,954 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:03,967 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:03,967 - blackboard - Testing completed.
2023-01-17 07:47:03,969 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.982906  
(<bound method Robot.stay of <agent_types.robot...           0.982906  
(<bound method Robot.go_to_charge_station of <a...           0.982906  
2023-01-17 07:47:03,969 - blackboard - Calling the final evaluator.
2023-01-17 07:47:03,969 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:03,969 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:03,987 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5665373088709948), (33, 4.366537308870995), (36, 5.533203975537661)]
2023-01-17 07:47:03,991 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:03,992 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:03,992 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,017 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.3665373088709947), (32, 4.366537308870995), (42, 5.047764631446723)]
2023-01-17 07:47:04,021 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:04,022 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:04,022 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,040 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.473620960218268), (15, 3.1021060200318193), (43, 3.3911571705756396)]
2023-01-17 07:47:04,044 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:04,045 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:04,045 - blackboard - Evaluation completed.
2023-01-17 07:47:04,047 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.982906  
(<bound method Robot.stay of <agent_types.robot...           0.982906  
(<bound method Robot.go_to_charge_station of <a...           0.982906  
2023-01-17 07:47:04,048 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:04,391 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:04,391 - blackboard - Starting tests...
2023-01-17 07:47:04,395 - blackboard - Running Deontology test.
2023-01-17 07:47:04,395 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:04,396 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,396 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:04,396 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,396 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:04,396 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,396 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:04,396 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:04,397 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:04,397 - blackboard - Running Utilitarian test.
2023-01-17 07:47:04,397 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:04,397 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:04,401 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,402 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,417 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:04,417 - blackboard - Testing completed.
2023-01-17 07:47:04,420 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.982398  
(<bound method Robot.stay of <agent_types.robot...           0.982398  
(<bound method Robot.go_to_charge_station of <a...           0.982398  
2023-01-17 07:47:04,420 - blackboard - Calling the final evaluator.
2023-01-17 07:47:04,420 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:04,420 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:04,439 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5645373088709948), (33, 4.364537308870995), (36, 5.531203975537661)]
2023-01-17 07:47:04,444 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:04,445 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:04,445 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,470 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.364537308870995), (32, 4.364537308870995), (42, 5.045764631446723)]
2023-01-17 07:47:04,473 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:04,474 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:04,474 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,493 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.471620960218268), (15, 3.1001060200318196), (43, 3.38915717057564)]
2023-01-17 07:47:04,497 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:04,497 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:04,497 - blackboard - Evaluation completed.
2023-01-17 07:47:04,499 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.982398  
(<bound method Robot.stay of <agent_types.robot...           0.982398  
(<bound method Robot.go_to_charge_station of <a...           0.982398  
2023-01-17 07:47:04,500 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:04,839 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:04,839 - blackboard - Starting tests...
2023-01-17 07:47:04,843 - blackboard - Running Deontology test.
2023-01-17 07:47:04,843 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:04,843 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,843 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:04,843 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,844 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:04,844 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:04,844 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:04,844 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:04,845 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:04,845 - blackboard - Running Utilitarian test.
2023-01-17 07:47:04,845 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:04,845 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:04,848 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,848 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,861 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:04,861 - blackboard - Testing completed.
2023-01-17 07:47:04,864 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.981888  
(<bound method Robot.stay of <agent_types.robot...           0.981888  
(<bound method Robot.go_to_charge_station of <a...           0.981888  
2023-01-17 07:47:04,864 - blackboard - Calling the final evaluator.
2023-01-17 07:47:04,864 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:04,864 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:04,883 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5625373088709948), (33, 4.362537308870995), (36, 5.529203975537661)]
2023-01-17 07:47:04,887 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:04,888 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:04,888 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,910 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.362537308870995), (32, 4.362537308870995), (42, 5.043764631446723)]
2023-01-17 07:47:04,913 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:04,914 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:04,914 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:04,932 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.4696209602182684), (15, 3.09810602003182), (43, 3.38715717057564)]
2023-01-17 07:47:04,936 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:04,937 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:04,937 - blackboard - Evaluation completed.
2023-01-17 07:47:04,939 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.981888  
(<bound method Robot.stay of <agent_types.robot...           0.981888  
(<bound method Robot.go_to_charge_station of <a...           0.981888  
2023-01-17 07:47:04,939 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:05,280 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:05,280 - blackboard - Starting tests...
2023-01-17 07:47:05,283 - blackboard - Running Deontology test.
2023-01-17 07:47:05,283 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:05,284 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,284 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:05,284 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,284 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:05,284 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,284 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:05,284 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:05,286 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:05,286 - blackboard - Running Utilitarian test.
2023-01-17 07:47:05,286 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:05,286 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:05,289 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,289 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,302 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:05,302 - blackboard - Testing completed.
2023-01-17 07:47:05,304 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.981375  
(<bound method Robot.stay of <agent_types.robot...           0.981375  
(<bound method Robot.go_to_charge_station of <a...           0.981375  
2023-01-17 07:47:05,304 - blackboard - Calling the final evaluator.
2023-01-17 07:47:05,305 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:05,305 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:05,321 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5605373088709948), (33, 4.360537308870994), (36, 5.5272039755376605)]
2023-01-17 07:47:05,325 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:05,325 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:05,325 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,346 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.360537308870995), (32, 4.360537308870994), (42, 5.041764631446723)]
2023-01-17 07:47:05,350 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:05,351 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:05,351 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,370 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.467620960218268), (15, 3.0961060200318196), (43, 3.38515717057564)]
2023-01-17 07:47:05,373 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:05,374 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:05,374 - blackboard - Evaluation completed.
2023-01-17 07:47:05,376 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.981375  
(<bound method Robot.stay of <agent_types.robot...           0.981375  
(<bound method Robot.go_to_charge_station of <a...           0.981375  
2023-01-17 07:47:05,377 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:05,717 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:05,717 - blackboard - Starting tests...
2023-01-17 07:47:05,721 - blackboard - Running Deontology test.
2023-01-17 07:47:05,721 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:05,721 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,722 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:05,722 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,722 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:05,722 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:05,722 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:05,722 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:05,724 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:05,724 - blackboard - Running Utilitarian test.
2023-01-17 07:47:05,724 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:05,724 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:05,728 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,728 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,743 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:05,743 - blackboard - Testing completed.
2023-01-17 07:47:05,746 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.980861  
(<bound method Robot.stay of <agent_types.robot...           0.980861  
(<bound method Robot.go_to_charge_station of <a...           0.980861  
2023-01-17 07:47:05,746 - blackboard - Calling the final evaluator.
2023-01-17 07:47:05,746 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:05,746 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:05,762 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5585373088709948), (33, 4.358537308870995), (36, 5.525203975537661)]
2023-01-17 07:47:05,766 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:05,767 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:05,767 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,789 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.3585373088709947), (32, 4.358537308870995), (42, 5.039764631446722)]
2023-01-17 07:47:05,794 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:05,794 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:05,794 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:05,814 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.465620960218268), (15, 3.0941060200318193), (43, 3.3831571705756396)]
2023-01-17 07:47:05,819 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:05,820 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:05,820 - blackboard - Evaluation completed.
2023-01-17 07:47:05,822 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.980861  
(<bound method Robot.stay of <agent_types.robot...           0.980861  
(<bound method Robot.go_to_charge_station of <a...           0.980861  
2023-01-17 07:47:05,823 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:06,162 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:06,163 - blackboard - Starting tests...
2023-01-17 07:47:06,167 - blackboard - Running Deontology test.
2023-01-17 07:47:06,167 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:06,167 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,167 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:06,167 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,168 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:06,168 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,168 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:06,168 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:06,170 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:06,170 - blackboard - Running Utilitarian test.
2023-01-17 07:47:06,170 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:06,170 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:06,173 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,173 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,187 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:06,187 - blackboard - Testing completed.
2023-01-17 07:47:06,190 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.980345  
(<bound method Robot.stay of <agent_types.robot...           0.980345  
(<bound method Robot.go_to_charge_station of <a...           0.980345  
2023-01-17 07:47:06,191 - blackboard - Calling the final evaluator.
2023-01-17 07:47:06,191 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:06,191 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:06,209 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5565373088709946), (33, 4.356537308870995), (36, 5.523203975537661)]
2023-01-17 07:47:06,213 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:06,213 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:06,213 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,240 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.356537308870995), (32, 4.356537308870995), (42, 5.037764631446723)]
2023-01-17 07:47:06,244 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:06,245 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:06,245 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,266 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.463620960218268), (15, 3.0921060200318196), (43, 3.38115717057564)]
2023-01-17 07:47:06,270 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:06,270 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:06,270 - blackboard - Evaluation completed.
2023-01-17 07:47:06,279 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.980345  
(<bound method Robot.stay of <agent_types.robot...           0.980345  
(<bound method Robot.go_to_charge_station of <a...           0.980345  
2023-01-17 07:47:06,280 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
2023-01-17 07:47:06,620 - blackboard - Loaded the data to the blackboard.
2023-01-17 07:47:06,620 - blackboard - Starting tests...
2023-01-17 07:47:06,624 - blackboard - Running Deontology test.
2023-01-17 07:47:06,624 - elder_care_deontology_test - Running ethical_governor.blackboard.ethicaltests.elder_care_deontology_test...
2023-01-17 07:47:06,625 - elder_care_deontology_test - Testing action: <bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,625 - elder_care_deontology_test - Action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : Not permissible since it broke rules [1]
2023-01-17 07:47:06,625 - elder_care_deontology_test - Testing action: <bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,625 - elder_care_deontology_test - Action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Permissible
2023-01-17 07:47:06,625 - elder_care_deontology_test - Testing action: <bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>
2023-01-17 07:47:06,625 - elder_care_deontology_test - Action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : Not permissible since it broke rules [4]
2023-01-17 07:47:06,625 - elder_care_deontology_test - ethical_governor.blackboard.ethicaltests.elder_care_deontology_test finished.
2023-01-17 07:47:06,626 - blackboard - Blackboard updated with Deontology test results.
2023-01-17 07:47:06,626 - blackboard - Running Utilitarian test.
2023-01-17 07:47:06,626 - elder_care_utilitarian_test - Running ethical_governor.blackboard.ethicaltests.elder_care_utilitarian_test...
2023-01-17 07:47:06,627 - elder_care_utilitarian_test - Testing action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:06,630 - elder_care_utilitarian_test - Testing action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,630 - elder_care_utilitarian_test - Testing action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,644 - blackboard - Blackboard updated with Utilitarian test results.
2023-01-17 07:47:06,645 - blackboard - Testing completed.
2023-01-17 07:47:06,647 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                NaN   
(<bound method Robot.stay of <agent_types.robot...                NaN   
(<bound method Robot.go_to_charge_station of <a...                NaN   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.979827  
(<bound method Robot.stay of <agent_types.robot...           0.979827  
(<bound method Robot.go_to_charge_station of <a...           0.979827  
2023-01-17 07:47:06,647 - blackboard - Calling the final evaluator.
2023-01-17 07:47:06,647 - PSRB_eldercare_evaluator - ethical_governor.blackboard.evaluator.PSRB_eldercare_evaluator started evaluation using the data in the blackboard.
2023-01-17 07:47:06,647 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>)
2023-01-17 07:47:06,667 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(7, 1.5545373088709948), (33, 4.354537308870994), (36, 5.521203975537661)]
2023-01-17 07:47:06,672 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.follow of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>, <agent_types.patient.Patient object at 0x7f9f10dbcb80>) : 0 with ['autonomy'] intention
2023-01-17 07:47:06,672 - PSRB_eldercare_evaluator - Action follow desirability: 0| Reason: rules [1] broken and not accepted by experts.
2023-01-17 07:47:06,673 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,697 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(8, 3.354537308870995), (32, 4.354537308870994), (42, 5.035764631446723)]
2023-01-17 07:47:06,701 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['wellbeing', 'autonomy'] intention
2023-01-17 07:47:06,702 - PSRB_eldercare_evaluator - Action stay desirability: 1| Reason: no rules broken, but not accepted by experts. However, PSRB system suggest the value tradeoff not enough to bend the rule.
2023-01-17 07:47:06,702 - PSRB_eldercare_evaluator - Evaluating action: (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)
2023-01-17 07:47:06,723 - PSRB_eldercare_evaluator - closest neighbours to the case are: [(9, 2.4616209602182684), (15, 3.0901060200318193), (43, 3.3791571705756396)]
2023-01-17 07:47:06,727 - PSRB_eldercare_evaluator - expert opinion on action (<bound method Robot.go_to_charge_station of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,) : 0 with ['availability', 'wellbeing'] intention
2023-01-17 07:47:06,728 - PSRB_eldercare_evaluator - Action go_to_charge_station desirability: 0| Reason: rules [4] broken and not accepted by experts.
2023-01-17 07:47:06,728 - blackboard - Evaluation completed.
2023-01-17 07:47:06,730 - data_structure - 
                                                   desirability_score  \
(<bound method Robot.follow of <agent_types.rob...                  0   
(<bound method Robot.stay of <agent_types.robot...                  1   
(<bound method Robot.go_to_charge_station of <a...                  0   

                                                   is_breaking_rule  \
(<bound method Robot.follow of <agent_types.rob...             True   
(<bound method Robot.stay of <agent_types.robot...            False   
(<bound method Robot.go_to_charge_station of <a...             True   

                                                   breaking_rule_ids  \
(<bound method Robot.follow of <agent_types.rob...               [1]   
(<bound method Robot.stay of <agent_types.robot...                []   
(<bound method Robot.go_to_charge_station of <a...               [4]   

                                                   follower_autonomy  \
(<bound method Robot.follow of <agent_types.rob...              -0.7   
(<bound method Robot.stay of <agent_types.robot...              -0.7   
(<bound method Robot.go_to_charge_station of <a...               1.0   

                                                   follower_wellbeing  \
(<bound method Robot.follow of <agent_types.rob...                1.0   
(<bound method Robot.stay of <agent_types.robot...                1.0   
(<bound method Robot.go_to_charge_station of <a...           0.407084   

                                                   robot_availability  
(<bound method Robot.follow of <agent_types.rob...           0.979827  
(<bound method Robot.stay of <agent_types.robot...           0.979827  
(<bound method Robot.go_to_charge_station of <a...           0.979827  
2023-01-17 07:47:06,730 - blackboard - Recommended actions: [(<bound method Robot.stay of <agent_types.robot.Robot object at 0x7f9ef969b6d0>>,)]
